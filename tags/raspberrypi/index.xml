<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberrypi on shinayoshi&#39;s note</title>
    <link>http://www.shinayoshi.net/tags/raspberrypi/</link>
    <description>Recent content in Raspberrypi on shinayoshi&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright (c) 2016 shinayoshi</copyright>
    <lastBuildDate>Sat, 22 Oct 2016 19:59:16 +0900</lastBuildDate>
    <atom:link href="http://www.shinayoshi.net/tags/raspberrypi/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>家庭内インターネット接続環境を構築する その1</title>
      <link>http://www.shinayoshi.net/post/2016/10/22/build-home-network-01/</link>
      <pubDate>Sat, 22 Oct 2016 19:59:16 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/10/22/build-home-network-01/</guid>
      <description>&lt;p&gt;FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。
最終的には以下のような構成を想定しています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20161022_01/home-network.png&#34; alt=&#34;home network&#34; width=&#34;640px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;具体的な構築内容は次回から記載します。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)でキャッシュDNSを構築する</title>
      <link>http://www.shinayoshi.net/post/2016/08/24/cache-dns-on-raspbian/</link>
      <pubDate>Wed, 24 Aug 2016 19:15:14 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/24/cache-dns-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)でキャッシュDNSを構築するまでのメモです。
Raspbianの基本的な設定は完了している前提です。&lt;/p&gt;

&lt;h2 id=&#34;bind9のインストール:de7ee9c067a99fe782c9ccc491d85d09&#34;&gt;bind9のインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install bind9 dnsutils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bind9の設定を行う。変更箇所が多かったので、変更箇所ではなく変更後のコンフィグを提示する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cat /etc/bind/named.conf.options
controls {
	inet 127.0.0.1 allow { localhost; } keys { rndc-key; };
};
include &amp;quot;/etc/bind/rndc.key&amp;quot;;

acl &amp;quot;internal-network&amp;quot; {
	localhost;
	127.0.0.1/32;
	192.168.10.0/24;
	192.168.20.0/24;
	192.168.30.0/24;
	192.168.40.0/24;
};

options {
	version &amp;quot;unknown&amp;quot;;

	directory &amp;quot;/var/cache/bind&amp;quot;;

	listen-on {
		internal-network;
	};

	querylog yes;
	allow-query {
		internal-network;
	};

	recursion yes;
	allow-recursion {
		internal-network;
	};

	forwarders {
		192.168.100.1;
	};

	notify no;

	max-ncache-ttl	300;
	max-cache-ttl	3600;
	recursive-clients	300;
	cleaning-interval	60;
	lame-ttl	600;
	max-cache-size	256m;

	allow-transfer {
		none;
	};

	allow-update {
		none;
	};
};

logging {
	channel &amp;quot;log_default&amp;quot; {
		file &amp;quot;/var/log/bind/named.log&amp;quot; versions 5 size 5m;
		print-time yes;
		severity info;
		print-category yes;
	};
	channel &amp;quot;alert&amp;quot; {
		file &amp;quot;/var/log/bind/alert.log&amp;quot; versions 8 size 4m;
		severity info;
		print-time yes;
		print-severity yes;
		print-category yes;
	};
	channel &amp;quot;query&amp;quot; {
		file &amp;quot;/var/log/bind/query.log&amp;quot; versions 8 size 50m;
		severity debug;
		print-time yes;
		print-severity yes;
		print-category yes;
	};

	category default { &amp;quot;log_default&amp;quot;; };
	category security { &amp;quot;alert&amp;quot;; };
	category queries { &amp;quot;query&amp;quot;; };
	category lame-servers { null; };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コンフィグの不備を確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo named-checkconf /etc/bind/named.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログ保存先のディレクトリを作成する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /var/log/bind
$ sudo chown bind:bind /var/log/bind
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bind9を再起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart bind9
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;iptablesの設定:de7ee9c067a99fe782c9ccc491d85d09&#34;&gt;iptablesの設定&lt;/h2&gt;

&lt;p&gt;iptablesでfirewallを設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo iptables -A INPUT -m state --state NEW -m udp -p udp -s 192.168.0.0/16 --dport 53 -j ACCEPT
$ sudo iptables -A INPUT -m state --state NEW -m tcp -p tcp -s 192.168.0.0/16 --dport 53 -j ACCEPT

$ sudo iptables -A OUTPU -m state --state NEW -m udp -p udp --dport 53 -j ACCEPT
$ sudo iptables -A OUTPU -m state --state NEW -m tcp -p tcp --dport 53 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;iptablesの設定を保存する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo sh -c &amp;quot;iptables-save &amp;gt; /etc/iptables/rules.v4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;dnsの設定:de7ee9c067a99fe782c9ccc491d85d09&#34;&gt;DNSの設定&lt;/h2&gt;

&lt;p&gt;キャッシュDNSを使用するように設定変更を行う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/dhcpcd.conf
static domain_name_servers=127.0.0.1
$ sudo systemctl reload dhcpcd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にSquidをインストールする</title>
      <link>http://www.shinayoshi.net/post/2016/08/22/installing-squid-on-raspbian/</link>
      <pubDate>Mon, 22 Aug 2016 22:24:35 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/22/installing-squid-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にSquidをインストールして内部NW向けプロキシサーバを構築するまでのメモです。&lt;/p&gt;

&lt;h2 id=&#34;raspbianの初期設定:b44e2973592bad70879d3cac4bdad4df&#34;&gt;Raspbianの初期設定&lt;/h2&gt;

&lt;p&gt;過去のブログ記事を参考に初期設定を実施する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パッケージの最新化&lt;/li&gt;
&lt;li&gt;パッケージのインストール
&amp;ndash; chkconfig
&amp;ndash; tcpdump
&amp;ndash; telnet
&amp;ndash; dnsutils&lt;/li&gt;
&lt;li&gt;IPアドレスの固定化&lt;/li&gt;
&lt;li&gt;NTP設定&lt;/li&gt;
&lt;li&gt;rpi-configの設定
&amp;ndash; ディスク拡張
&amp;ndash; 文字コード設定
&amp;ndash; タイムゾーン設定
&amp;ndash; Wifiの国設定
&amp;ndash; ホスト名変更&lt;/li&gt;
&lt;li&gt;公開鍵認証方式の設定&lt;/li&gt;
&lt;li&gt;IPv6の無効化&lt;/li&gt;
&lt;li&gt;SELinuxの無効化&lt;/li&gt;
&lt;li&gt;iptablesの設定&lt;/li&gt;
&lt;li&gt;logwatchのインストール&lt;/li&gt;
&lt;li&gt;Zabbix Agentのインストール・監視登録&lt;/li&gt;
&lt;li&gt;SNMPDのインストール・Cacti登録&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;squidのインストール:b44e2973592bad70879d3cac4bdad4df&#34;&gt;Squidのインストール&lt;/h2&gt;

&lt;p&gt;Squidをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install squid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Squidを設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp -p /etc/squid/squid.conf{,.org}
$ sudo vi /etc/squid/squid.conf
$ sudo diff /etc/squid/squid.conf.org /etc/squid/squid.conf
609,611c609,616
&amp;lt; acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
&amp;lt; acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
&amp;lt; acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
---
&amp;gt; #acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
&amp;gt; #acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
&amp;gt; #acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
&amp;gt; acl localnet src 192.168.10.0/24
&amp;gt; acl localnet src 192.168.20.0/24
&amp;gt; acl localnet src 192.168.30.0/24
&amp;gt; acl localnet src 192.168.40.0/24
&amp;gt; 
676c681
&amp;lt; #http_access allow localnet
---
&amp;gt; http_access allow localnet
1738a1744
&amp;gt; cache_mem 256 MB
1747a1754
&amp;gt; maximum_object_size_in_memory 512 KB
1945a1953
&amp;gt; cache_dir ufs /var/spool/squid 10000 16 256
1988a1997
&amp;gt; maximum_object_size 20480 KB
2097a2107
&amp;gt; logformat combined %&amp;gt;a %ui %un [%tl] &amp;quot;%rm %ru HTTP/%rv&amp;quot; %Hs %&amp;lt;st &amp;quot;%{Referer}&amp;gt;h&amp;quot; &amp;quot;%{User-Agent}&amp;gt;h&amp;quot; %Ss:%Sh
2121c2131,2132
&amp;lt; access_log /var/log/squid/access.log squid
---
&amp;gt; #access_log /var/log/squid/access.log squid
&amp;gt; access_log /var/log/squid/access.log combined
2217a2229
&amp;gt; emulate_httpd_log off
2751c2763,2768
&amp;lt; refresh_pattern .		0	20%	4320
---
&amp;gt; refresh_pattern -i \.(gif|png|jpe?g|tif?f|bmp)$ 1440 25% 10080
&amp;gt; refresh_pattern -i \.(mpe?g|avi|ra?m|wmv|mov)$ 1440 25% 10080
&amp;gt; refresh_pattern -i \.(wav|mp3|mid)$ 1440 25% 10080
&amp;gt; refresh_pattern -i \.(class|swf|pdf)$ 1440 25% 10080
&amp;gt; refresh_pattern -i \.(js|css)$ 1440 25% 10080
&amp;gt; refresh_pattern . 45 20% 4320
2944a2962
&amp;gt; via off
3100a3119,3122
&amp;gt; header_access Referer deny all
&amp;gt; header_access X-Forwarded-For deny all
&amp;gt; header_access Via deny all
&amp;gt; header_access Cache-Control deny all
3392a3415
&amp;gt; visible_hostname unknown
4699a4723
&amp;gt; forwarded_for off
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Squidの設定に不備がないか確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo squid -k parse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Squidの設定を有効にする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl reload squid
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unix-power.net/linux/squid.html&#34;&gt;CentOS Squidの設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.ckme.co.jp/proxy.shtml&#34;&gt;Proxyサーバの設定（squid）：tech.ckme.co.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nabeshiki.tumblr.com/post/20000083416/2001-sd-squid&#34;&gt;Proxyキャッシュサーバ設定術・Squidの設定(2001年掲載) | なべしき&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.asial.co.jp/1076&#34;&gt;Privoxy + Ziproxy + Squidで高速フィルタリングサーバを作ってみた : アシアルブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;iptablesの通信許可設定:b44e2973592bad70879d3cac4bdad4df&#34;&gt;iptablesの通信許可設定&lt;/h2&gt;

&lt;p&gt;内部NWからSquidへの通信を許可する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo iptables -A INPUT -m state --state NEW -m tcp -p tcp -s 192.168.0.0/16 --dport 3128 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;iptablesの設定を保存する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo sh -c &amp;quot;iptables-save &amp;gt; /etc/iptables/rules.v4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ブラウザのプロキシ設定:b44e2973592bad70879d3cac4bdad4df&#34;&gt;ブラウザのプロキシ設定&lt;/h2&gt;

&lt;p&gt;ブラウザ使用するプロキシ設定をSquidに変更する。&lt;/p&gt;

&lt;p&gt;Squidのログを確認してSquid経由でWebアクセスができていることを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cat /var/log/squid/access.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;raspbianのプロキシ設定:b44e2973592bad70879d3cac4bdad4df&#34;&gt;Raspbianのプロキシ設定&lt;/h2&gt;

&lt;p&gt;起動時にプロキシを使用するように設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/profile.d/proxy.sh
PROXY=&amp;quot;192.168.20.10:3128&amp;quot;
export http_proxy=&amp;quot;http://${PROXY}&amp;quot;
export https_proxy=&amp;quot;http://${PROXY}&amp;quot;
export no_proxy=&amp;quot;localhost,127.0.0.1,192.168.*&amp;quot;

export HTTP_PROXY=&amp;quot;${http_proxy}&amp;quot;
export HTTPS_PROXY=&amp;quot;${https_proxy}&amp;quot;
export NO_PROXY=&amp;quot;${no_proxy}&amp;quot;
$source /etc/profile.d/proxy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記コマンドではsudo時の環境変数には反映されない。そのため、sudo時には&lt;code&gt;-E&lt;/code&gt;オプションを指定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo -E apt-get update
$ sudo -E apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cactiにデバイスを登録する</title>
      <link>http://www.shinayoshi.net/post/2016/08/21/to-register-the-device-in-cacti/</link>
      <pubDate>Sun, 21 Aug 2016 11:05:38 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/21/to-register-the-device-in-cacti/</guid>
      <description>

&lt;p&gt;Cactiに新規デバイスを登録するメモです。
SNMPv3を使用してSNMPの値を取得します。&lt;/p&gt;

&lt;h2 id=&#34;snmpdのインストール:96919d4705cb30bdfea22f7f270ecaaf&#34;&gt;snmpdのインストール&lt;/h2&gt;

&lt;p&gt;追加するデバイス(Server)にsnmpdをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install snmpd snmp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;snmpconfツールを使用してsnmpd.confを作成する。
SNMPv3を使用する前提で質問に回答していきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ snmpconf -g basic_setup

The following installed configuration files were found:

   1:  /etc/snmp/snmp.conf
   2:  /etc/snmp/snmpd.conf

Would you like me to read them in?  Their content will be merged with the
output files created by this session.

Valid answer examples: &amp;quot;all&amp;quot;, &amp;quot;none&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;1,2,5&amp;quot;

Read in which (default = all): 2
************************************************ 
*** Beginning basic system information setup ***
************************************************ 
Do you want to configure the information returned in the system MIB group (contact info, etc)? (default = y): n
************************************** 
*** BEGINNING ACCESS CONTROL SETUP ***
************************************** 
Do you want to configure the agent&#39;s access control? (default = y): y
Do you want to allow SNMPv3 read-write user based access (default = y): n
Do you want to allow SNMPv3 read-only user based access (default = y): y

Configuring: rouser
Description:
  a SNMPv3 read-only user
    arguments:  user [noauth|auth|priv] [restriction_oid]

Enter the SNMPv3 user that should have read-only access to the system: snmpuser
The minimum security level required for that user [noauth|auth|priv, default = auth]: priv
The OID that this community should be restricted to [if appropriate]: 

Finished Output: rouser  snmpuser priv 
Do another rouser line? (default = y): n
Do you want to allow SNMPv1/v2c read-write community access (default = y): n
Do you want to allow SNMPv1/v2c read-only community access (default = y): n
**************************************** 
*** Beginning trap destination setup ***
**************************************** 
Do you want to configure where and if the agent will send traps? (default = y): n
**************************************** 
*** Beginning monitoring setup ***
**************************************** 
Do you want to configure the agent&#39;s ability to monitor various aspects of your system? (default = y): n


The following files were created:

  snmpd.conf  

These files should be moved to /usr/share/snmp if you
want them used by everyone on the system.  In the future, if you add 
the -i option to the command line I&#39;ll copy them there automatically for you.

Or, if you want them for your personal use only, copy them to
/home/pi/.snmp .  In the future, if you add the -p option to the
command line I&#39;ll copy them there automatically for you.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;snmpd.confを設置する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp -p /etc/snmp/snmpd.conf{,.org}
$ sudo cp snmpd.conf /etc/snmp/snmpd.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SNMPv3ユーザを作成する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl stop snmpd
$ sudo cp -p /var/lib/snmp/snmpd.conf{,.org}
$ sudo vi /var/lib/snmp/snmpd.conf
createUser snmpuser SHA snmp_pass AES snmp_pass
$ sudo systemctl start snmpd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SNMPv3で値を取得できることを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ snmpwalk -v 3 -u snmpuser -l authPriv -a SHA -A snmp_pass -x AES -X snmp_pass localhost .
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infraexpert.com/study/tcpip21.html&#34;&gt;TCP/IP - SNMPとは&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;iptablesの通信許可:96919d4705cb30bdfea22f7f270ecaaf&#34;&gt;iptablesの通信許可&lt;/h2&gt;

&lt;p&gt;CactiからのSNMP通信を許可する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##INPUTチェーン
#SNMPは許可
$ sudo iptables -A INPUT -m state --state NEW -m udp -p udp -s 192.168.30.0/24 --dport 161 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;iptablesの設定を保存する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo sh -c &amp;quot;iptables-save &amp;gt; /etc/iptables/rules.v4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cactiにデバイス-server-を登録:96919d4705cb30bdfea22f7f270ecaaf&#34;&gt;Cactiにデバイス(Server)を登録&lt;/h2&gt;

&lt;p&gt;↓Cactiにログイン。&lt;code&gt;User Name&lt;/code&gt;と&lt;code&gt;Password&lt;/code&gt;を入力して&lt;code&gt;Login&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_01.png&#34; alt=&#34;cacti_register_01&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓Cactiログイン後の画面。&lt;code&gt;Devices&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_02.png&#34; alt=&#34;cacti_register_02&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓デバイスの管理画面。&lt;code&gt;Add&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_03.png&#34; alt=&#34;cacti_register_03&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓デバイスの登録画面。必要事項を入力して&lt;code&gt;Create&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_04.png&#34; alt=&#34;cacti_register_04&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓デバイスの登録完了画面。&lt;code&gt;SNMP Information&lt;/code&gt;にデバイスの情報が表示されていることを確認する。&lt;code&gt;Create Graphs for this Host&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_05.png&#34; alt=&#34;cacti_register_05&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓作成したいグラフを選択して&lt;code&gt;Create&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_06.png&#34; alt=&#34;cacti_register_06&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓グラフが作成されたことを確認する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_07.png&#34; alt=&#34;cacti_register_07&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓左のメニューから&lt;code&gt;Graph Trees&lt;/code&gt;をクリックし、&lt;code&gt;Default Tree&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_08.png&#34; alt=&#34;cacti_register_08&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓ツリーの管理画面。&lt;code&gt;Add&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_09.png&#34; alt=&#34;cacti_register_09&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓ツリーへのデバイス登録画面。必要事項を入力して&lt;code&gt;Create&lt;/code&gt;をクリックする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_10.png&#34; alt=&#34;cacti_register_10&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓ツリーの管理画面。デバイスが登録されたことを確認する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_11.png&#34; alt=&#34;cacti_register_11&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓グラフ画面。追加したデバイスのグラフが表示されることを確認する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160821_01/cacti_register_12.png&#34; alt=&#34;cacti_register_12&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にCactiをインストールする</title>
      <link>http://www.shinayoshi.net/post/2016/08/20/installing-cacti-on-raspberrypi/</link>
      <pubDate>Sat, 20 Aug 2016 20:46:05 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/20/installing-cacti-on-raspberrypi/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にCactiを導入するまでのメモです。
Apache2やMySQLはインストール済みであることを前提としています。&lt;/p&gt;

&lt;h2 id=&#34;cactiのインストール:2f489629b1913a89dc29f01f282bd186&#34;&gt;Cactiのインストール&lt;/h2&gt;

&lt;p&gt;Cactiをインストールする。
途中でApache2の設定やMySQLのパスワードについて聞かれるので適宜回答する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install cacti cacti-spine

↓&amp;lt;了解&amp;gt;を選択してEnter
 ┌─────────────────────┤ libphp-adodb を設定しています ├─────────────────────┐
 │                                                                           │ 
 │ 警告: php に対するインクルードパスが変更されています!                     │ 
 │                                                                           │ 
 │ libphp-adobd は /usr/share/adodb にインストールされなくなっています。新   │ 
 │ しいインストールのパスは /usr/share/php/adodb です。                      │ 
 │                                                                           │ 
 │ php.ini ファイルを更新してください。web サーバの設定も変更する必要がある  │ 
 │ かもしれません。                                                          │ 
 │                                                                           │ 
 │                                  &amp;lt;了解&amp;gt;                                   │ 
 │                                                                           │ 
 └───────────────────────────────────────────────────────────────────────────┘ 

↓apache2を選択してEnter
 ┌────────────────────────┤ cacti を設定しています ├─────────────────────────┐
 │ Cacti が自動的に設定するウェブサーバを選んでください。                    │ 
 │                                                                           │ 
 │ ウェブサーバを手作業で設定したい場合は「どれでもない」を選んでください。  │ 
 │                                                                           │ 
 │ ウェブサーバ:                                                             │ 
 │                                                                           │ 
 │                               apache2                                     │ 
 │                               lighttpd                                    │ 
 │                               どれでもない                                │ 
 │                                                                           │ 
 │                                                                           │ 
 │                                  &amp;lt;了解&amp;gt;                                   │ 
 │                                                                           │ 
 └───────────────────────────────────────────────────────────────────────────┘ 

↓&amp;lt;はい&amp;gt;を選択してEnter
 ┌────────────────────────┤ cacti を設定しています ├─────────────────────────┐
 │                                                                           │ 
 │ cacti は利用できるようになる前にはデータベースをインストールして設定する  │ 
 │ 必要があります。この設定を dbconfig-common で管理するようにもできます。   │ 
 │                                                                           │ 
 │ あなたが熟練したデータベース管理者でこの設定について手動で何をするのかを  │ 
 │ 知っている場合、あるいはデータベースが既にインストール及び設定されている  │ 
 │ 場合は、この選択を選ばない方が良いでしょう。何をすればいいのかについての  │ 
 │ 詳細については、大抵 /usr/share/doc/cacti に置かれています。              │ 
 │                                                                           │ 
 │ そうでない場合は、恐らくこの設定を選ぶのが良いでしょう。                  │ 
 │                                                                           │ 
 │ cacti のデータベースを dbconfig-common で設定しますか?                    │ 
 │                                                                           │ 
 │                    &amp;lt;はい&amp;gt;                      &amp;lt;いいえ&amp;gt;                   │ 
 │                                                                           │ 
 └───────────────────────────────────────────────────────────────────────────┘ 

↓MySQLのrootユーザのパスワードを入力し、&amp;lt;了解&amp;gt;を選択してEnter
  ┌────────────────────────┤ cacti を設定しています ├────────────────────────┐
  │ このパッケージが MySQL データベースとユーザを作る際に使う管理者権限アカ  │ 
  │ ウントのパスワードを入力してください。                                   │ 
  │                                                                          │ 
  │ データベースの管理権限を持つユーザのパスワード:                          │ 
  │                                                                          │ 
  │ ________________________________________________________________________ │ 
  │                                                                          │ 
  │                   &amp;lt;了解&amp;gt;                     &amp;lt;取消&amp;gt;                      │ 
  │                                                                          │ 
  └──────────────────────────────────────────────────────────────────────────┘ 

↓MySQLのcactiユーザのパスワードを入力し、&amp;lt;了解&amp;gt;を選択してEnter
  ┌────────────────────────┤ cacti を設定しています ├────────────────────────┐
  │ データベースサーバに cacti が登録するパスワードを入力してください。空の  │ 
  │ ままにしておくと、ランダムパスワードが生成されます。                     │ 
  │                                                                          │ 
  │ cacti 用の MySQL アプリケーションパスワード:                             │ 
  │                                                                          │ 
  │ ________________________________________________________________________ │ 
  │                                                                          │ 
  │                   &amp;lt;了解&amp;gt;                     &amp;lt;取消&amp;gt;                      │ 
  │                                                                          │ 
  └──────────────────────────────────────────────────────────────────────────┘ 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;データベースをMyISAMからInnoDBに変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/share/cacti/cli
$ sudo php convert_innodb.php
Converting All Non-Memory Cacti Database Tables to Innodb with Less than &#39;300000&#39; Records
Converting Table -&amp;gt; &#39;cdef&#39; Successful
Converting Table -&amp;gt; &#39;cdef_items&#39; Successful
Converting Table -&amp;gt; &#39;colors&#39; Successful
Converting Table -&amp;gt; &#39;data_input&#39; Successful
Converting Table -&amp;gt; &#39;data_input_data&#39; Successful
Converting Table -&amp;gt; &#39;data_input_fields&#39; Successful
Converting Table -&amp;gt; &#39;data_local&#39; Successful
Converting Table -&amp;gt; &#39;data_template&#39; Successful
Converting Table -&amp;gt; &#39;data_template_data&#39; Successful
Converting Table -&amp;gt; &#39;data_template_data_rra&#39; Successful
Converting Table -&amp;gt; &#39;data_template_rrd&#39; Successful
Converting Table -&amp;gt; &#39;graph_local&#39; Successful
Converting Table -&amp;gt; &#39;graph_template_input&#39; Successful
Converting Table -&amp;gt; &#39;graph_template_input_defs&#39; Successful
Converting Table -&amp;gt; &#39;graph_templates&#39; Successful
Converting Table -&amp;gt; &#39;graph_templates_gprint&#39; Successful
Converting Table -&amp;gt; &#39;graph_templates_graph&#39; Successful
Converting Table -&amp;gt; &#39;graph_templates_item&#39; Successful
Converting Table -&amp;gt; &#39;graph_tree&#39; Successful
Converting Table -&amp;gt; &#39;graph_tree_items&#39; Successful
Converting Table -&amp;gt; &#39;host&#39; Successful
Converting Table -&amp;gt; &#39;host_graph&#39; Successful
Converting Table -&amp;gt; &#39;host_snmp_cache&#39; Successful
Converting Table -&amp;gt; &#39;host_snmp_query&#39; Successful
Converting Table -&amp;gt; &#39;host_template&#39; Successful
Converting Table -&amp;gt; &#39;host_template_graph&#39; Successful
Converting Table -&amp;gt; &#39;host_template_snmp_query&#39; Successful
Converting Table -&amp;gt; &#39;plugin_config&#39; Successful
Converting Table -&amp;gt; &#39;plugin_db_changes&#39; Successful
Converting Table -&amp;gt; &#39;plugin_hooks&#39; Successful
Converting Table -&amp;gt; &#39;plugin_realms&#39; Successful
Converting Table -&amp;gt; &#39;poller&#39; Successful
Converting Table -&amp;gt; &#39;poller_command&#39; Successful
Converting Table -&amp;gt; &#39;poller_item&#39; Successful
Converting Table -&amp;gt; &#39;poller_output&#39; Successful
Converting Table -&amp;gt; &#39;poller_reindex&#39; Successful
Converting Table -&amp;gt; &#39;poller_time&#39; Successful
Converting Table -&amp;gt; &#39;rra&#39; Successful
Converting Table -&amp;gt; &#39;rra_cf&#39; Successful
Converting Table -&amp;gt; &#39;settings&#39; Successful
Converting Table -&amp;gt; &#39;settings_graphs&#39; Successful
Converting Table -&amp;gt; &#39;settings_tree&#39; Successful
Converting Table -&amp;gt; &#39;snmp_query&#39; Successful
Converting Table -&amp;gt; &#39;snmp_query_graph&#39; Successful
Converting Table -&amp;gt; &#39;snmp_query_graph_rrd&#39; Successful
Converting Table -&amp;gt; &#39;snmp_query_graph_rrd_sv&#39; Successful
Converting Table -&amp;gt; &#39;snmp_query_graph_sv&#39; Successful
Converting Table -&amp;gt; &#39;user_auth&#39; Successful
Converting Table -&amp;gt; &#39;user_auth_perms&#39; Successful
Converting Table -&amp;gt; &#39;user_auth_realm&#39; Successful
Converting Table -&amp;gt; &#39;user_log&#39; Successful
Converting Table -&amp;gt; &#39;version&#39; Successful
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cactiへのアクセス:2f489629b1913a89dc29f01f282bd186&#34;&gt;Cactiへのアクセス&lt;/h2&gt;

&lt;p&gt;ブラウザからCactiのURL(&lt;code&gt;http://IPアドレス/cacti&lt;/code&gt;)にアクセスする。&lt;/p&gt;

&lt;p&gt;Cactiの初期設定画面が表示されるので、画面の指示に従いながら設定を行う。&lt;/p&gt;

&lt;p&gt;↓Nextをクリック&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_01.png&#34; alt=&#34;cacti_install_01&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓Nextをクリック&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_02.png&#34; alt=&#34;cacti_install_02&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓Errorがないことを確認してFinishをクリック&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_03.png&#34; alt=&#34;cacti_install_03&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓admin/adminでログイン&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_04.png&#34; alt=&#34;cacti_install_04&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓adminの新しいパスワードを入力してSaveをクリック&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_05.png&#34; alt=&#34;cacti_install_05&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;↓ログイン後の初期画面&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.shinayoshi.net/img/20160820_01/cacti_install_06.png&#34; alt=&#34;cacti_install_06&#34; width=&#34;320px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にCowrieをインストールする</title>
      <link>http://www.shinayoshi.net/post/2016/08/15/install-cowrie-on-raspbian/</link>
      <pubDate>Mon, 15 Aug 2016 20:46:34 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/15/install-cowrie-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(jessie)にCowrieをインストールしてSSHハニーポットを構築するメモです。
はじめはKippoを使用する予定だったのですが、Kippoの改良版であるCowrieを使用することにしました。&lt;/p&gt;

&lt;p&gt;個人のメモですので、もし本メモを参考にハニーポットを構築する際は自己責任でお願いします。&lt;/p&gt;

&lt;h2 id=&#34;raspbianの初期設定:4c0925631b42437e2f8c229197506152&#34;&gt;Raspbianの初期設定&lt;/h2&gt;

&lt;p&gt;Raspbianの初期設定として以下を行いました。&lt;/p&gt;

&lt;h3 id=&#34;パッケージの最新化:4c0925631b42437e2f8c229197506152&#34;&gt;パッケージの最新化&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ipアドレスの固定化:4c0925631b42437e2f8c229197506152&#34;&gt;IPアドレスの固定化&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/dhcpcd.conf
#Add the following line
interface eth0
static ip_address=192.168.10.10/24
static routers=192.168.10.254
static domain_name_servers=192.168.100.1
#static domain_name=
#static domain_search=
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ntp設定:4c0925631b42437e2f8c229197506152&#34;&gt;NTP設定&lt;/h3&gt;

&lt;p&gt;NTP同期先を設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/ntp.conf
#Add the line
server ntp.nict.jp iburst
server ntp.jst.mfeed.ad.jp iburst
# comment out
#server 0.debian.pool.ntp.org iburst
#server 1.debian.pool.ntp.org iburst
#server 2.debian.pool.ntp.org iburst
#server 3.debian.pool.ntp.org iburst
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NTPサーバを再起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart ntp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;時刻同期の状態を確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ntpq -p
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;raspi-config関連:4c0925631b42437e2f8c229197506152&#34;&gt;raspi-config関連&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ディスク拡張&lt;/li&gt;
&lt;li&gt;文字コード設定&lt;/li&gt;
&lt;li&gt;タイムゾーン設定&lt;/li&gt;
&lt;li&gt;Wifiの国設定&lt;/li&gt;
&lt;li&gt;ホスト名変更&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;公開鍵認証方式の設定:4c0925631b42437e2f8c229197506152&#34;&gt;公開鍵認証方式の設定&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/pi/.ssh/id_rsa): 
Created directory &#39;/home/pi/.ssh&#39;.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/pi/.ssh/id_rsa.
Your public key has been saved in /home/pi/.ssh/id_rsa.pub.

$ cd ~/.ssh/
$ cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys
$ chmod 600 authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Raspbianで作成した秘密鍵をローカルPCにコピーする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ scp pi@192.168.10.10:~/.ssh/id_rsa ~/.ssh/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;公開鍵認証方式でsshログインできることを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -i ~/.ssh/id_rsa pi@192.168.10.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sshサーバの設定:4c0925631b42437e2f8c229197506152&#34;&gt;SSHサーバの設定&lt;/h2&gt;

&lt;p&gt;Cowrieで&lt;code&gt;22/tcp&lt;/code&gt;を使用しているため、SSHサーバのポートを変更します。またログイン設定も変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/ssh/sshd_config
#Port 22
Port 20022

#PermitRootLogin without-password
PermitRootLogin no

ChallengeResponseAuthentication no

#PasswordAuthentication yes
PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SSHサーバの設定を再起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SSHサーバのポートを変更しているため、以降の手順でSSHログインするためにはポート番号を指定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -i ~/.ssh/id_rsa -p 20022 pi@192.168.10.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ユーザ設定:4c0925631b42437e2f8c229197506152&#34;&gt;ユーザ設定&lt;/h2&gt;

&lt;p&gt;rootユーザが無効化されていることを確認する(2列目が&lt;code&gt;L&lt;/code&gt;であることを確認)。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo passwd -S root
root L 05/27/2016 0 99999 7 -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cowrieユーザを作成する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo adduser --disabled-password cowrie
ユーザ `cowrie&#39; を追加しています...
新しいグループ `cowrie&#39; (1001) を追加しています...
新しいユーザ `cowrie&#39; (1001) をグループ `cowrie&#39; として追加しています...
ホームディレクトリ `/home/cowrie&#39; を作成しています...
`/etc/skel&#39; からファイルをコピーしています...
cowrie のユーザ情報を変更中
新しい値を入力してください。標準設定値を使うならリターンを押してください
	フルネーム []: 
	部屋番号 []: 
	職場電話番号 []: 
	自宅電話番号 []: 
	その他 []: 
以上で正しいですか? [Y/n] y
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cowrieのインストール:4c0925631b42437e2f8c229197506152&#34;&gt;Cowrieのインストール&lt;/h2&gt;

&lt;p&gt;Cowrienの公式サイトの&lt;a href=&#34;https://github.com/micheloosterhof/cowrie/blob/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;を参考にインストールを行う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install python-twisted python-crypto python-pyasn1 python-gmpy2 python-mysqldb python-zope.interface

$ sudo su - cowrie
$ git clone http://github.com/micheloosterhof/cowrie
$ cd cowrie/
$ cp cowrie.cfg.dist cowrie.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cowrieの設定:4c0925631b42437e2f8c229197506152&#34;&gt;Cowrieの設定&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ vi cowrie.cfg
#sensor_name=myhostname
sensor_name=rpicowrie

#hostname = svr04
hostname = cowrie01
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cowrieの起動と終了:4c0925631b42437e2f8c229197506152&#34;&gt;Cowrieの起動と終了&lt;/h2&gt;

&lt;p&gt;起動するときは以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./start.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;終了するときは以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./stop.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cowrieポートのポートフォワード:4c0925631b42437e2f8c229197506152&#34;&gt;Cowrieポートのポートフォワード&lt;/h2&gt;

&lt;p&gt;Cowrieでは&lt;code&gt;2222/tcp&lt;/code&gt;でポート待ち受けをしているため、iptablesで22/tcpにポートフォワードする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo iptables -t nat -A PREROUTING -p tcp --dport 22 -j REDIRECT --to-port 2222
$ sudo iptables -t nat -n -L
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;iptables設定の保存:4c0925631b42437e2f8c229197506152&#34;&gt;iptables設定の保存&lt;/h2&gt;

&lt;p&gt;再起動時にもポートフォワード設定が有効になるようにiptablesの設定を保存する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install iptables-persistent
$ sudo systemctl enable netfilter-persistent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にFortiGateのプライベートMIBを追加する</title>
      <link>http://www.shinayoshi.net/post/2016/08/13/add-fortigate-mib-on-raspbian/</link>
      <pubDate>Sat, 13 Aug 2016 00:34:26 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/13/add-fortigate-mib-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にFortiGateのプライベートMIBを追加するまでのメモです。&lt;/p&gt;

&lt;h2 id=&#34;mibファイルのアップロード:7017348ad71b7a4303759dd4acee2115&#34;&gt;MIBファイルのアップロード&lt;/h2&gt;

&lt;p&gt;FortiGateのプライベートMIB(&lt;code&gt;FORTINET-CORE-MIB.mib&lt;/code&gt;、&lt;code&gt;FORTINET-FORTIGATE-MIB.mib&lt;/code&gt;)を&lt;code&gt;/home/pi&lt;/code&gt;直下にアップロードします。&lt;/p&gt;

&lt;h2 id=&#34;プライベートmibの設定:7017348ad71b7a4303759dd4acee2115&#34;&gt;プライベートMIBの設定&lt;/h2&gt;

&lt;p&gt;プライベートMIBファイルを&lt;code&gt;/usr/share/snmp/mibs/vendor&lt;/code&gt;に移動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mkdir /usr/share/snmp/mibs/vendor
$ sudo mv FORTINET-* /usr/share/snmp/mibs/vendor/
$ sudo chown root:root /usr/share/snmp/mibs/vendor/FORTINET-*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プライベートMIBを使用するように&lt;code&gt;snmp.conf&lt;/code&gt;を設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/snmp/snmp.conf
mibdirs +/usr/share/snmp/mibs/vendor
mibs +FORTINET-CORE-MIB:FORTINET-FORTIGATE-MIB
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;プライベートmibの設定確認:7017348ad71b7a4303759dd4acee2115&#34;&gt;プライベートMIBの設定確認&lt;/h2&gt;

&lt;p&gt;FortiGateのMIBフィールド名が表示されることを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ snmpwalk -v 2c -c public 192.168.1.1 .1.3.6.1.4.1.12356.101.4.1.4
FORTINET-FORTIGATE-MIB::fgSysMemUsage.0 = Gauge32: 29
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZabbixでSNMPデバイスの監視を行う</title>
      <link>http://www.shinayoshi.net/post/2016/08/11/monitoring-snmp-devices-on-zabbix/</link>
      <pubDate>Thu, 11 Aug 2016 15:51:09 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/11/monitoring-snmp-devices-on-zabbix/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にインストールしたZabbixでSNMPデバイスの監視を行うまでのメモです。&lt;/p&gt;

&lt;p&gt;とりあえずSNMP Deviceの監視ができるようになりましたが、なぜこの手順でよいのか理解できていない部分が多いです。&lt;/p&gt;

&lt;h2 id=&#34;パッケージの更新:f5404dafe03c7d830d1b17663408aefc&#34;&gt;パッケージの更新&lt;/h2&gt;

&lt;p&gt;Zabbix Serverのパッケージを最新する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;snmp関連パッケージのインストール:f5404dafe03c7d830d1b17663408aefc&#34;&gt;SNMP関連パッケージのインストール&lt;/h2&gt;

&lt;p&gt;Zabbix ServerにSNMP関連のパッケージをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install snmp snmp-mibs-downloader
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- $ sudo apt-get install snmpd --&gt;

&lt;!-- $ sudo apt-get install snmptrapd snmptt --&gt;

&lt;h2 id=&#34;snmpの設定:f5404dafe03c7d830d1b17663408aefc&#34;&gt;SNMPの設定&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/usr/bin/download-mibs&lt;/code&gt;でダウンロードしたMIBSを読み込めるように設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/snmp/snmp.conf
#mibs :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;メモ：デフォルトでは以下のディレクトリを検索する。&lt;code&gt;snmpstatus --help&lt;/code&gt;の出力で確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;${HOME}/.snmp/mibs
/usr/share/snmp/mibs
/usr/share/snmp/mibs/iana
/usr/share/snmp/mibs/ietf
/usr/share/mibs/site
/usr/share/snmp/mibs
/usr/share/mibs/iana
/usr/share/mibs/ietf
/usr/share/mibs/netsnmp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-serverの再起動:f5404dafe03c7d830d1b17663408aefc&#34;&gt;Zabbix Serverの再起動&lt;/h2&gt;

&lt;p&gt;Zabbix Serverを再起動してSNMPの設定を読み込む(本当に必要？)。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart zabbix-server
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-serverでのsnmp-device監視設定:f5404dafe03c7d830d1b17663408aefc&#34;&gt;Zabbix ServerでのSNMP Device監視設定&lt;/h2&gt;

&lt;p&gt;ブラウザからZabbix ServerのURL(&lt;code&gt;http://IPアドレス/zabbix&lt;/code&gt;)にアクセスしてログインする。&lt;/p&gt;

&lt;p&gt;「設定」⇒「ホスト」⇒「ホストの作成」を選択する。&lt;/p&gt;

&lt;p&gt;ホストの設定画面が表示されるので最低限以下を設定する。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;ホスト&amp;rdquo;タブ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ホスト名：監視対象機器のホスト名。&lt;/li&gt;
&lt;li&gt;グループ：所属するグループ。適切なグループがなければ新規作成。&lt;/li&gt;
&lt;li&gt;エージェントのインターフェース：削除。&lt;/li&gt;
&lt;li&gt;SNMPインターフェース：追加。監視対象機器のIPアドレスを設定。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;ldquo;テンプレート&amp;rdquo;タブ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;テンプレートとのリンク：&amp;rdquo;Template SNMP Device&amp;rdquo;を追加。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;ldquo;マクロ&amp;rdquo;タブ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マクロ：&lt;code&gt;{$SNMP_COMMUNITY}&lt;/code&gt; ⇒ 値：&lt;code&gt;監視対象機器のコミュニティ名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にZabbix Agentをインストール</title>
      <link>http://www.shinayoshi.net/post/2016/08/11/install-zabbix-agent-on-raspbian/</link>
      <pubDate>Thu, 11 Aug 2016 11:51:20 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/11/install-zabbix-agent-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にZabbix Agentをインストールしてサーバ監視を行うまでのメモです。
Zabbix Serverのインストールは別のメモになります。&lt;/p&gt;

&lt;h2 id=&#34;パッケージの更新:235ab9bc7c5a5e6a7bcc83bc43bc05a7&#34;&gt;パッケージの更新&lt;/h2&gt;

&lt;p&gt;Raspbianのパッケージを最新する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-agentのインストール:235ab9bc7c5a5e6a7bcc83bc43bc05a7&#34;&gt;Zabbix Agentのインストール&lt;/h2&gt;

&lt;p&gt;Zabbix Agentのインストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install zabbix-agent
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-agentの設定:235ab9bc7c5a5e6a7bcc83bc43bc05a7&#34;&gt;Zabbix Agentの設定&lt;/h2&gt;

&lt;p&gt;Zabbix Agentを設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/zabbix/zabbix_agentd.conf
Server=(Zabbix server IP address)
ServerActive=(Zabbix server IP address)
Hostname=(Hostname)

$ sudo systemctl restart zabbix-agent
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-serverでの監視登録:235ab9bc7c5a5e6a7bcc83bc43bc05a7&#34;&gt;Zabbix Serverでの監視登録&lt;/h2&gt;

&lt;p&gt;ブラウザからZabbix ServerのURL(&lt;code&gt;http://IPアドレス/zabbix&lt;/code&gt;)にアクセスしてログインする。&lt;/p&gt;

&lt;p&gt;「設定」⇒「ホスト」⇒「ホストの作成」を選択する。&lt;/p&gt;

&lt;p&gt;ホスト名の設定やテンプレートの選択を行い、保存を選択する。&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbian(Jessie)にZabbix Serverをインストール</title>
      <link>http://www.shinayoshi.net/post/2016/08/10/install-zabbix-server-on-raspbian/</link>
      <pubDate>Wed, 10 Aug 2016 00:04:16 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/10/install-zabbix-server-on-raspbian/</guid>
      <description>

&lt;p&gt;Raspbian(Jessie)にZabbix Serverをインストールするメモです。
Zabbix Agentのインストールは別のメモになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zabbix.com/documentation/2.2/manual/installation/install_from_packages&#34;&gt;3 Installation from packages [Zabbix Documentation 2.2]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;パッケージの更新:4df21ad0746a34acfa37879eaf637713&#34;&gt;パッケージの更新&lt;/h2&gt;

&lt;p&gt;Raspbianのパッケージを最新する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-serverのインストール:4df21ad0746a34acfa37879eaf637713&#34;&gt;Zabbix Serverのインストール&lt;/h2&gt;

&lt;p&gt;Zabbix Serverのインストール&lt;/p&gt;

&lt;p&gt;インストール途中でMySQLのrootアカウントのパスワードを求められるので、適宜設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install zabbix-server-mysql zabbix-frontend-php
$ sudo apt-get install php5-mysql
$ sudo apt-get install task-japanese
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mysqlの初期設定:4df21ad0746a34acfa37879eaf637713&#34;&gt;MySQLの初期設定&lt;/h3&gt;

&lt;p&gt;MySQLのセキュア設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mysql_secure_installation
In order to log into MySQL to secure it, we&#39;ll need the current
password for the root user.  If you&#39;ve just installed MySQL, and
you haven&#39;t set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

You already have a root password set, so you can safely answer &#39;n&#39;.

Change the root password? [Y/n] n
 ... skipping.

By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] Y
 ... Success!

Normally, root should only be allowed to connect from &#39;localhost&#39;.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] Y
 ... Success!

By default, MySQL comes with a database named &#39;test&#39; that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] Y
 - Dropping test database...
ERROR 1008 (HY000) at line 1: Can&#39;t drop database &#39;test&#39;; database doesn&#39;t exist
 ... Failed!  Not critical, keep moving...
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] Y
 ... Success!

Cleaning up...



All done!  If you&#39;ve completed all of the above steps, your MySQL
installation should now be secure.

Thanks for using MySQL!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MySQLの初期設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/mysql/my.cnf
[mysqld]
character-set-server=utf8
collation-server=utf8_general_ci
skip-character-set-client-handshake
default-storage-engine=InnoDB
innodb_file_per_table
innodb_buffer_pool_size=256M
skip-name-resolve

[mysqldump]
default-character-set=utf8

[mysql]
default-character-set=utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html&#34;&gt;MySQL :: MySQL 5.5 Reference Manual :: 5.1.4 Server System Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MySQLの再起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;apache2の初期設定:4df21ad0746a34acfa37879eaf637713&#34;&gt;Apache2の初期設定&lt;/h3&gt;

&lt;p&gt;Apache2のセキュリティ設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/apache2/conf-available/security.conf
ServerTokens Prod
ServerSignature Off
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apache2の文字コード設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/apache2/conf-available/charset.conf
#AddDefaultCharset UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apache2のServerName設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo sh -c &amp;quot;echo ServerName ${HOSTNAME} &amp;gt; /etc/apache2/conf-available/fqdn.conf&amp;quot;
$ sudo a2enconf fqdn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apache2の再起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apachectl configtest
$ sudo systemctl restart apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mk-55.hatenablog.com/entry/2014/07/07/004510&#34;&gt;ubuntuにおけるapache2のAH00558エラーを解決する。 - mk_55&amp;rsquo;s diary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;zabbix-serverの設定:4df21ad0746a34acfa37879eaf637713&#34;&gt;Zabbix Serverの設定&lt;/h2&gt;

&lt;p&gt;データベースの作成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mysql -uroot -p
Enter password:
mysql&amp;gt; 
mysql&amp;gt; create database zabbix character set utf8 collate utf8_bin;
mysql&amp;gt; grant all privileges on zabbix.* to zabbix@localhost identified by &#39;zabbix_password&#39;;
mysql&amp;gt; quit

$ zcat /usr/share/zabbix-server-mysql/schema.sql.gz | mysql -uzabbix -p zabbix
$ zcat /usr/share/zabbix-server-mysql/images.sql.gz | mysql -uzabbix -p zabbix
$ zcat /usr/share/zabbix-server-mysql/data.sql.gz | mysql -uzabbix -p zabbix
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apache2のZabbixサイト設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp /usr/share/doc/zabbix-frontend-php/examples/apache.conf /etc/apache2/conf-available/zabbix.conf
$ sudo vi /etc/apache2/conf-available/zabbix.conf
# Add the following lines
php_value max_execution_time 300
php_value memory_limit 128M
php_value post_max_size 16M
php_value upload_max_filesize 2M
php_value max_input_time 300
php_value date.timezone Asia/Tokyo

$ sudo a2enconf zabbix
$ sudo apachectl configtest
$ sudo systemctl restart apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Zabbixのサーバ設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/zabbix/zabbix_server.conf
DBHost=localhost
DBName=zabbix
DBUser=zabbix
DBPassword=zabbix_password

$ sudo vi /etc/default/zabbix-server
START=yes

$ sudo ln -s /usr/share/fonts/truetype/unifont/unifont.ttf /usr/share/zabbix/fonts/
$ sudo vi /usr/share/zabbix/include/defines.inc.php
define(&#39;ZBX_GRAPH_FONT_NAME&#39;,		&#39;unifont&#39;);

$ sudo systemctl restart zabbix-server
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zabbix-serverへのアクセス:4df21ad0746a34acfa37879eaf637713&#34;&gt;Zabbix Serverへのアクセス&lt;/h2&gt;

&lt;p&gt;ブラウザからZabbix ServerのURL(&lt;code&gt;http://IPアドレス/zabbix&lt;/code&gt;)にアクセスする。&lt;/p&gt;

&lt;p&gt;Zabbixの初期設定画面が表示されるので、画面の指示に従いながら設定を行う。&lt;/p&gt;

&lt;h2 id=&#34;zabbix-serverへのログイン:4df21ad0746a34acfa37879eaf637713&#34;&gt;Zabbix Serverへのログイン&lt;/h2&gt;

&lt;p&gt;Zabbixの初期設定が完了するとログイン画面が表示されるので、デフォルトアカウント(&lt;code&gt;Admin/zabbix&lt;/code&gt;)でログインする。
ログイン後は画面右上のProfileを開き、パスワードを変更しておく。&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbianをバックアップ・リストアする</title>
      <link>http://www.shinayoshi.net/post/2016/08/07/backup-raspbian/</link>
      <pubDate>Sun, 07 Aug 2016 22:29:12 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/08/07/backup-raspbian/</guid>
      <description>

&lt;p&gt;RaspbianをSDカード丸ごとバックアップ・リストアするメモです。
今回はddコマンドを使ってディスクイメージを書き出す方法でバックアップ・リストアを行います。&lt;/p&gt;

&lt;h2 id=&#34;バックアップ:6cd0cb3f4c453418b61672dbcf967693&#34;&gt;バックアップ&lt;/h2&gt;

&lt;p&gt;SDカードデバイスを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil list
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *32.2 GB    disk1
   1:             Windows_FAT_32 boot                    66.1 MB    disk1s1
   2:                      Linux                         32.2 GB    disk1s2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SDカードデバイスをアンマウントする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil unmountDisk /dev/disk1
Unmount of all volumes on disk1 was successful
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SDカードのディスクイメージをバックアップする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo dd bs=1m if=/dev/rdisk1 of=~/Desktop/raspi_backup.img
Password:
30735+0 records in
30735+0 records out
32227983360 bytes transferred in 1610.088954 secs (20016275 bytes/sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SDカードデバイスを取り出す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil eject /dev/disk1
Disk /dev/disk1 ejected
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;リストア:6cd0cb3f4c453418b61672dbcf967693&#34;&gt;リストア&lt;/h2&gt;

&lt;p&gt;SDカードデバイスを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil list
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *32.2 GB    disk1
   1:             Windows_FAT_32 boot                    66.1 MB    disk1s1
   2:                      Linux                         32.2 GB    disk1s2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SDカードデバイスをアンマウントする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil unmountDisk /dev/disk1
Unmount of all volumes on disk1 was successful
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ディスクイメージをSDカードにリストアする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo dd bs=1m if=~/Desktop/raspi_backup.img of=/dev/rdisk1
Password:
30735+0 records in
30735+0 records out
32227983360 bytes transferred in 2153.545392 secs (14965082 bytes/sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SDカードデバイスを取り出す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil eject /dev/disk1
Disk /dev/disk1 ejected
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RaspbianにKivyをセットアップ</title>
      <link>http://www.shinayoshi.net/post/2016/07/16/raspberrypi-kivy-setup/</link>
      <pubDate>Sat, 16 Jul 2016 20:49:31 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/07/16/raspberrypi-kivy-setup/</guid>
      <description>

&lt;p&gt;Raspberry Pi 7&amp;rdquo; Touch Screen LCDに接続したRaspberry Pi 3 (Raspbian)にKivyをインストールしてデモを動かすまでのメモです。&lt;/p&gt;

&lt;h2 id=&#34;kivyのインストール:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;Kivyのインストール&lt;/h2&gt;

&lt;p&gt;Kivyに必要なパッケージをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev pkg-config libgl1-mesa-dev libgles2-mesa-dev python-setuptools libgstreamer1.0-dev git-core gstreamer1.0-plugins-{bad,base,good,ugly} gstreamer1.0-{omx,alsa} python-dev cython

$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kivyをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/kivy/kivy
$ cd kivy
$ make
$ echo &amp;quot;export PYTHONPATH=$(pwd):\$PYTHONPATH&amp;quot; &amp;gt;&amp;gt; ~/.profile
$ source ~/.profile
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kivy.org/docs/installation/installation-rpi.html&#34;&gt;Installation on Raspberry Pi — Kivy 1.9.2-dev0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;raspberry-pi-7-touch-screen-lcdの利用設定:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;Raspberry Pi 7&amp;rdquo; Touch Screen LCDの利用設定&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ vi ~/.kivy/config.ini
[input]
mouse = mouse
mtdev\_%(name)s = probesysfs,provider=mtdev
hid\_%(name)s = probesysfs,provider=hidinput
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kivyデモを実行:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;Kivyデモを実行&lt;/h2&gt;

&lt;p&gt;デモ実行に必要なパッケージをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install xclip xsel
$ sudo pip install pygments docutils
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;デモ１-showcase:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;デモ１(showcase)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/kivy/examples/demo/showcase
$ python main.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;デモ２-3drendering:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;デモ２(3Drendering)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/kivy/examples/3Drendering
$ python main.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kivyのプログラムを作成-実行:7e54fa4db923fa1d790b8a2df258af41&#34;&gt;Kivyのプログラムを作成・実行&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://a-zumi.net/python-kivy-simple-paint/&#34;&gt;【Python】Kivyを使ってシンプルなペイントツールを作成する方法&lt;/a&gt;を参考に、自前でペイントツールを作成し、実行する。&lt;/p&gt;

&lt;p&gt;ソースコードを作成する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi paint.py
&lt;/code&gt;&lt;/pre&gt;

&lt;script src=&#34;https://gist.github.com/kurozumi/31f250c38662a102afa5.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python paint.py  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Raspberry Pi 7&amp;rdquo; Touch Screen LCDをタッチすることで線が引けることを確認する。&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi 3にRaspberry Pi 7&#34; Touch Screen LCDを接続</title>
      <link>http://www.shinayoshi.net/post/2016/07/12/raspberrypi-touchscreen-setup/</link>
      <pubDate>Tue, 12 Jul 2016 21:16:20 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/07/12/raspberrypi-touchscreen-setup/</guid>
      <description>

&lt;p&gt;Raspberry Pi 3のディスプレイとして「Official 7&amp;rdquo; Touchscreen Display＋フレーム セット（青）」を購入した。
Raspberry Pi 3に接続して最低限使えるようにするまでをメモする。&lt;/p&gt;

&lt;h2 id=&#34;接続:2020837d634538f02be0a31ea2dca63e&#34;&gt;接続&lt;/h2&gt;

&lt;p&gt;以下のWebサイトを参考に接続する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raspberry-pi.ksyic.com/page/page/pgp.id/4&#34;&gt;Raspberry Pi 7インチ タッチ・スクリーン ディスプレイ 接続・取り付け方法 - Raspberry Pi Shop by KSY:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/blog/the-eagerly-awaited-raspberry-pi-display/&#34;&gt;The Eagerly Awaited Raspberry Pi Display - Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;天地逆転を直す:2020837d634538f02be0a31ea2dca63e&#34;&gt;天地逆転を直す&lt;/h2&gt;

&lt;p&gt;購入したフレームを使用すると天地が逆転した状態で起動する(製品仕様)。Raspberry Pi 3側で画面の回転を設定することで天地逆転を直す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /boot/config.txt
#Add the following line
lcd_rotate=2
$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://learn.pimoroni.com/tutorial/pi-lcd/getting-started-with-raspberry-pi-7-touchscreen-lcd&#34;&gt;Getting Started with the Raspberry Pi 7&amp;rdquo; Touchscreen LCD - Pimoroni Yarr-niversity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;日本語環境の整備:2020837d634538f02be0a31ea2dca63e&#34;&gt;日本語環境の整備&lt;/h2&gt;

&lt;p&gt;日本語関連パッケージをインストールする。余計なパッケージもインストールされてしまいますが、楽な方法ではあります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install task-japanese task-japanese-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;スクリーンキーボードのインストール:2020837d634538f02be0a31ea2dca63e&#34;&gt;スクリーンキーボードのインストール&lt;/h2&gt;

&lt;p&gt;Touchscreen Displayだけで操作を行うために、On Screen Keyboardを導入する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install florence
$ sudo apt-get install at-spi2-core
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログイン画面でもOn Screen Keyboardを使用できるように設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/lightdm/lightdm-gtk-greeter.conf
show-indicators=~language;~a11y;~session;~power
keyboard=florence --focus
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xmodulo.com/onscreen-virtual-keyboard-linux.html&#34;&gt;How to use on-screen virtual keyboard on Linux - Xmodulo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/forums/viewtopic.php?f=108&amp;amp;t=123189&#34;&gt;Raspberry Pi • View topic - Solution for Jessie and Florence virtual keyboard crash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/forums/viewtopic.php?f=63&amp;amp;t=113526&#34;&gt;Raspberry Pi • View topic - Virtual Keyboard on Login Screen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;リモートデスクトップ接続:2020837d634538f02be0a31ea2dca63e&#34;&gt;リモートデスクトップ接続&lt;/h2&gt;

&lt;p&gt;xrdp接続でRaspberry Pi 3にリモートデスクトップ接続する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install xrdp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Firewall等でリモートデスクトップ接続に必要なポートを開ける。ポートの確認は以下のファイルを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/xrdp/xrdp.ini
$ cat /etc/xrdp/sesman.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tapun.net/raspi/raspberry-pi-xrdp&#34;&gt;Raspberry Pi | RDPで接続してみたいxrdpでWindows端末に画面転送します – たぷん日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi 3でWiFi設定</title>
      <link>http://www.shinayoshi.net/post/2016/07/10/raspbian-wifi-setup/</link>
      <pubDate>Sun, 10 Jul 2016 09:37:19 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/07/10/raspbian-wifi-setup/</guid>
      <description>

&lt;p&gt;Raspberry Pi 3には標準でWiFiモジュールが搭載されている。
今回はWiFi設定を行う。&lt;/p&gt;

&lt;h2 id=&#34;wifiネットワークのスキャン:366b0c30f1d198568510d56bfae90a97&#34;&gt;WiFiネットワークのスキャン&lt;/h2&gt;

&lt;p&gt;接続するWiFiネットワークを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo iwlist wlan0 scan
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;アクセスポイントの設定:366b0c30f1d198568510d56bfae90a97&#34;&gt;アクセスポイントの設定&lt;/h2&gt;

&lt;p&gt;アクセスポイントを設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp -p /etc/wpa_supplicant/wpa_supplicant.conf{,.org}
$ sudo sh -c &amp;quot;wpa_passphrase &#39;アクセスポイント名(ESSID)&#39; &#39;アクセスポイントのパスワード&#39; &amp;gt;&amp;gt; /etc/wpa_supplicant/wpa_supplicant.conf&amp;quot;
$ sudo cat /etc/wpa_supplicant/wpa_supplicant.conf
country=JP
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
    ssid=&amp;quot;アクセスポイント名(ESSID)&amp;quot;
    #psk=&amp;quot;先ほどのコマンドで入力したパスワード(不要であれば削除する)&amp;quot;
    psk=暗号化されたパスワード
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;wifiの有効化:366b0c30f1d198568510d56bfae90a97&#34;&gt;WiFiの有効化&lt;/h2&gt;

&lt;p&gt;WiFiを有効化する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo ifdown wlan0
$ sudo ifup wlan0
$ ifconfig wlan0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ipアドレスの固定化:366b0c30f1d198568510d56bfae90a97&#34;&gt;IPアドレスの固定化&lt;/h2&gt;

&lt;p&gt;IPアドレスを固定化する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/dhcpcd.conf
#Add the following line
interface wlan0
static ip_address=192.168.100.10⁄24
static routers=192.168.100.1
static domain_name_servers=192.168.100.1
#static domain_name=
#static domain_search=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WiFiデバイスを再起動する。IPアドレスが固定化されていることを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo ifdown wlan0
$ sudo ifup wlan0
$ ifconfig wlan0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:366b0c30f1d198568510d56bfae90a97&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md&#34;&gt;Setting WiFi up via the command line - Raspberry Pi Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://move0tofu.hatenablog.jp/entry/2016/04/30/215517&#34;&gt;Raspberry Pi 3 Model B環境構築 その3(WiFi設定) - @0tofuの備忘録&amp;hellip;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspbianの初期設定</title>
      <link>http://www.shinayoshi.net/post/2016/07/09/raspbian-jessie-setup/</link>
      <pubDate>Sat, 09 Jul 2016 21:43:58 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/07/09/raspbian-jessie-setup/</guid>
      <description>

&lt;p&gt;こちらも何番煎じかわかりませんが、Raspbianをインストールした後の初期設定メモです。&lt;/p&gt;

&lt;h2 id=&#34;前提:29d369a29c800517b14390fe39a79e9d&#34;&gt;前提&lt;/h2&gt;

&lt;p&gt;Raspberry Pi 3にRaspbian Jessie (2016-05-27版)をインストールした環境の初期設定を想定する。ただし、セキュリティ関連の設定は省略する(例えば、SSH接続の公開鍵認証設定やFirewall設定、不要サービスの停止など)。&lt;/p&gt;

&lt;h2 id=&#34;パッケージ更新:29d369a29c800517b14390fe39a79e9d&#34;&gt;パッケージ更新&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/documentation/raspbian/updating.md&#34;&gt;Updating and Upgrading Raspbian - Raspberry Pi Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ipアドレス固定化:29d369a29c800517b14390fe39a79e9d&#34;&gt;IPアドレス固定化&lt;/h2&gt;

&lt;p&gt;Raspberry Pi 3のIPアドレスを固定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/dhcpcd.conf
#Add the following line
interface eth0
static ip_address=192.168.40.10/24
static routers=192.168.40.254
static domain_name_servers=192.168.100.1
#static domain_name=
#static domain_search=
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;man dhcpcd.conf&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usbポートの電流供給増加:29d369a29c800517b14390fe39a79e9d&#34;&gt;USBポートの電流供給増加&lt;/h2&gt;

&lt;p&gt;USBポートの電流供給を1.2A(4ポート合計)まで供給できるようにする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /boot/config.txt
#Add the following line
max_usb_current=1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elinux.org/RPiconfig&#34;&gt;RPiconfig - eLinux.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ntp設定:29d369a29c800517b14390fe39a79e9d&#34;&gt;NTP設定&lt;/h2&gt;

&lt;p&gt;NTP同期先を設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/ntp.conf
#Add the line
server ntp.nict.jp iburst
server ntp.jst.mfeed.ad.jp iburst
# comment out
#server 0.debian.pool.ntp.org iburst
#server 1.debian.pool.ntp.org iburst
#server 2.debian.pool.ntp.org iburst
#server 3.debian.pool.ntp.org iburst
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NTPサーバを再起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart ntp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;時刻同期の状態を確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ntpq -p
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vogel.at.webry.info/201501/article_5.html&#34;&gt;NTPサーバの設定 パソコン鳥のブログ/ウェブリブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;chkconfigのインストール:29d369a29c800517b14390fe39a79e9d&#34;&gt;chkconfigのインストール&lt;/h2&gt;

&lt;p&gt;Raspbian起動時のサービスを管理するためにchkconfigをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install chkconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;raspi-config関連:29d369a29c800517b14390fe39a79e9d&#34;&gt;raspi-config関連&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ディスク拡張:29d369a29c800517b14390fe39a79e9d&#34;&gt;ディスク拡張&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「1 Expand Filesystem」を選択する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;raspi-configの初期画面に戻る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;文字コード設定:29d369a29c800517b14390fe39a79e9d&#34;&gt;文字コード設定&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「5 Internationalisation Options」を選択する。&lt;/li&gt;
&lt;li&gt;「I1 Change Locale」を選択する。&lt;/li&gt;
&lt;li&gt;「en_GB.UTF-8 UTF-8」の選択を外す。&lt;/li&gt;
&lt;li&gt;「ja_JP.UTF-8 UTF-8」を選択する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;「ja_JP.UTF-8」を選択する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;raspi-configの初期画面に戻る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;タイムゾーン設定:29d369a29c800517b14390fe39a79e9d&#34;&gt;タイムゾーン設定&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「5 Internationalisation Options」を選択する。&lt;/li&gt;
&lt;li&gt;「I2 Change Timezone」を選択する。&lt;/li&gt;
&lt;li&gt;「Asia」を選択する。&lt;/li&gt;
&lt;li&gt;「Tokyo」を選択する。&lt;/li&gt;
&lt;li&gt;raspi-configの初期画面に戻る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;wifiの国設定:29d369a29c800517b14390fe39a79e9d&#34;&gt;Wifiの国設定&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「5 Internationalisation Options」を選択する。&lt;/li&gt;
&lt;li&gt;「I4 Change Wi-fi Country」を選択する。&lt;/li&gt;
&lt;li&gt;「JP Japan」を選択する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;raspi-configの初期画面に戻る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;ホスト名変更:29d369a29c800517b14390fe39a79e9d&#34;&gt;ホスト名変更&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「9 Advanced Options」を選択する。&lt;/li&gt;
&lt;li&gt;「A2 Hostname」を選択する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;ホスト名を設定する。&lt;/li&gt;
&lt;li&gt;「Ok」を選択する。&lt;/li&gt;
&lt;li&gt;raspi-configの初期画面に戻る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;raspi-config終了:29d369a29c800517b14390fe39a79e9d&#34;&gt;raspi-config終了&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;「Finish」を選択する。&lt;/li&gt;
&lt;li&gt;リブートの確認が求められるため、「Yes」を選択する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>