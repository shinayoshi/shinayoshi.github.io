<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos on shinayoshi&#39;s note</title>
    <link>http://www.shinayoshi.net/tags/centos/</link>
    <description>Recent content in Centos on shinayoshi&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright (c) 2017 shinayoshi</copyright>
    <lastBuildDate>Wed, 03 May 2017 15:50:26 +0900</lastBuildDate>
    <atom:link href="http://www.shinayoshi.net/tags/centos/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CentOS 7.3にLet&#39;s Encryptの証明書を導入する</title>
      <link>http://www.shinayoshi.net/post/2017/05/03/install-lets-encrypt/</link>
      <pubDate>Wed, 03 May 2017 15:50:26 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2017/05/03/install-lets-encrypt/</guid>
      <description>

&lt;h2 id=&#34;前提:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;前提&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;OS

&lt;ul&gt;
&lt;li&gt;CentOS Linux release 7.3.1611 (Core)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Web Server

&lt;ul&gt;
&lt;li&gt;Apache 2.4.6&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;firewalld

&lt;ul&gt;
&lt;li&gt;enabled&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SELinux

&lt;ul&gt;
&lt;li&gt;disabled&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;firewalldでhttpsを有効化:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;firewalldでhttpsを有効化&lt;/h2&gt;

&lt;p&gt;インターネットからhttpsアクセスを許可する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --permanent --zone=public --add-service=https
success
$ sudo firewall-cmd --reload
success
$ sudo firewall-cmd --zone=public --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: eth0
  sources: 
  services: http https
  ports: 
  protocols: 
  masquerade: no
  forward-ports: 
  sourceports: 
  icmp-blocks: 
  rich rules: 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;epelリポジトリのインストール:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;EPELリポジトリのインストール&lt;/h2&gt;

&lt;p&gt;EPELリポジトリをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install epel-release
[sudo] password for ryota:
読み込んだプラグイン:fastestmirror
Loading mirror speeds from cached hostfile
 * base: ftp.iij.ad.jp
 * extras: ftp.iij.ad.jp
 * updates: ftp.iij.ad.jp
依存性の解決をしています
--&amp;gt; トランザクションの確認を実行しています。
---&amp;gt; パッケージ epel-release.noarch 0:7-9 を インストール
--&amp;gt; 依存性解決を終了しました。

依存性を解決しました

================================================================================
 Package                アーキテクチャー バージョン      リポジトリー      容量
================================================================================
インストール中:
 epel-release           noarch           7-9             extras            14 k

トランザクションの要約
================================================================================
インストール  1 パッケージ

総ダウンロード容量: 14 k
インストール容量: 24 k
Is this ok [y/d/N]: y
Downloading packages:
epel-release-7-9.noarch.rpm                                |  14 kB   00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  インストール中          : epel-release-7-9.noarch                         1/1
  検証中                  : epel-release-7-9.noarch                         1/1

インストール:
  epel-release.noarch 0:7-9

完了しました!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常時EPELリポジトリを無効化する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp -p /etc/yum.repos.d/epel.repo{,.org}
$
$ ls -l /etc/yum.repos.d/epel.repo*
-rw-r--r--. 1 root root 957 12月 28 02:37 /etc/yum.repos.d/epel.repo
-rw-r--r--. 1 root root 957 12月 28 02:37 /etc/yum.repos.d/epel.repo.org
$
$ sudo sed -i -e &amp;quot;s/^enabled=1/enabled=0/g&amp;quot; /etc/yum.repos.d/epel.repo
$
$ diff /etc/yum.repos.d/epel.repo{.org,}
6c6
&amp;lt; enabled=1
---
&amp;gt; enabled=0
$
$ ls -l /etc/yum.repos.d/epel.repo*
-rw-r--r--. 1 root root 957  5月  3 16:17 /etc/yum.repos.d/epel.repo
-rw-r--r--. 1 root root 957 12月 28 02:37 /etc/yum.repos.d/epel.repo.org
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;certbotのインストール:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;Certbotのインストール&lt;/h2&gt;

&lt;p&gt;EPELリポジトリからCertbotをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum --enablerepo=epel install certbot python-certbot-apache
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;let-s-encryptで証明書を取得:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;Let&amp;rsquo;s Encryptで証明書を取得&lt;/h2&gt;

&lt;p&gt;以下のコマンドを実行してLet&amp;rsquo;s Encryptの証明書を取得する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo certbot --apache
[sudo] password for ryota: 
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Enter email address (used for urgent renewal and security notices) (Enter &#39;c&#39; to
cancel):&amp;lt;メールアドレス&amp;gt;
Starting new HTTPS connection (1): acme-v01.api.letsencrypt.org

-------------------------------------------------------------------------------
Please read the Terms of Service at
https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf. You must agree
in order to register with the ACME server at
https://acme-v01.api.letsencrypt.org/directory
-------------------------------------------------------------------------------
(A)gree/(C)ancel: A

-------------------------------------------------------------------------------
Would you be willing to share your email address with the Electronic Frontier
Foundation, a founding partner of the Let&#39;s Encrypt project and the non-profit
organization that develops Certbot? We&#39;d like to send you email about EFF and
our work to encrypt the web, protect its users and defend digital rights.
-------------------------------------------------------------------------------
(Y)es/(N)o: N
No names were found in your configuration files. Please enter in your domain
name(s) (comma and/or space separated)  (Enter &#39;c&#39; to cancel):www.shinayoshi.net
Obtaining a new certificate
Performing the following challenges:
tls-sni-01 challenge for www.shinayoshi.net

We were unable to find a vhost with a ServerName or Address of www.shinayoshi.net.
Which virtual host would you like to choose?
(note: conf files with multiple vhosts are not yet supported)
-------------------------------------------------------------------------------
1: ssl.conf                       |                       | HTTPS | Enabled
-------------------------------------------------------------------------------
Press 1 [enter] to confirm the selection (press &#39;c&#39; to cancel): 1
Waiting for verification...
Cleaning up challenges
Generating key (2048 bits): /etc/letsencrypt/keys/0000_key-certbot.pem
Creating CSR: /etc/letsencrypt/csr/0000_csr-certbot.pem

We were unable to find a vhost with a ServerName or Address of www.shinayoshi.net.
Which virtual host would you like to choose?
(note: conf files with multiple vhosts are not yet supported)
-------------------------------------------------------------------------------
1: ssl.conf                       |                       | HTTPS | Enabled
-------------------------------------------------------------------------------
Press 1 [enter] to confirm the selection (press &#39;c&#39; to cancel): 1
Deploying Certificate to VirtualHost /etc/httpd/conf.d/ssl.conf

Please choose whether HTTPS access is required or optional.
-------------------------------------------------------------------------------
1: Easy - Allow both HTTP and HTTPS access to these sites
2: Secure - Make all requests redirect to secure HTTPS access
-------------------------------------------------------------------------------
Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2
Created redirect file: le-redirect-www.shinayoshi.net.conf
Rollback checkpoint is empty (no changes made?)

-------------------------------------------------------------------------------
Congratulations! You have successfully enabled https://www.shinayoshi.net

You should test your configuration at:
https://www.ssllabs.com/ssltest/analyze.html?d=www.shinayoshi.net
-------------------------------------------------------------------------------

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/www.shinayoshi.net/fullchain.pem. Your
   cert will expire on 2017-08-01. To obtain a new or tweaked version
   of this certificate in the future, simply run certbot again with
   the &amp;quot;certonly&amp;quot; option. To non-interactively renew *all* of your
   certificates, run &amp;quot;certbot renew&amp;quot;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&#39;s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;let-s-encryptの証明書確認:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;Let&amp;rsquo;s Encryptの証明書確認&lt;/h2&gt;

&lt;p&gt;ブラウザから証明書を作成したWebサイトにアクセスし、Let&amp;rsquo;s Encryptの証明書が使用されていることを確認する。&lt;/p&gt;

&lt;h2 id=&#34;systemdで証明書の自動更新:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;systemdで証明書の自動更新&lt;/h2&gt;

&lt;p&gt;以下のコマンドを実行して自動更新が正常に完了することを確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo certbot renew --dry-run
Saving debug log to /var/log/letsencrypt/letsencrypt.log

-------------------------------------------------------------------------------
Processing /etc/letsencrypt/renewal/www.shinayoshi.net.conf
-------------------------------------------------------------------------------
Cert not due for renewal, but simulating renewal for dry run
Starting new HTTPS connection (1): acme-staging.api.letsencrypt.org
Renewing an existing certificate
Performing the following challenges:
tls-sni-01 challenge for www.shinayoshi.net
Waiting for verification...
Cleaning up challenges
Generating key (2048 bits): /etc/letsencrypt/keys/0003_key-certbot.pem
Creating CSR: /etc/letsencrypt/csr/0003_csr-certbot.pem

-------------------------------------------------------------------------------
new certificate deployed with reload of apache server; fullchain is
/etc/letsencrypt/live/www.shinayoshi.net/fullchain.pem
-------------------------------------------------------------------------------
** DRY RUN: simulating &#39;certbot renew&#39; close to cert expiry
**          (The test certificates below have not been saved.)

Congratulations, all renewals succeeded. The following certs have been renewed:
  /etc/letsencrypt/live/www.shinayoshi.net/fullchain.pem (success)
** DRY RUN: simulating &#39;certbot renew&#39; close to cert expiry
**          (The test certificates above have not been saved.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;certbot renew --dry-run&lt;/code&gt;の実行結果に問題がないことを確認し、以下のコマンドを実行して自動更新を有効化する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable certbot-renew.timer
Created symlink from /etc/systemd/system/timer.target.wants/certbot-renew.timer to /usr/lib/systemd/system/certbot-renew.timer.
$ sudo systemctl start certbot-renew.timer
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:796da8d9138d6d5ff4391beb8d50ce4e&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://certbot.eff.org/#centosrhel7-apache&#34;&gt;Certbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://letsencrypt.jp/&#34;&gt;Let&amp;rsquo;s Encrypt 総合ポータル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hyper-text.org/archives/2016/10/lets_encrypt_ssl_quick_start.shtml&#34;&gt;Let&amp;rsquo;s Encrypt （無料 SSL サーバ証明書） の設定が超簡単になったと聞いて試してみた件 | WWW WATCH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ApacheでWebサイトを公開する</title>
      <link>http://www.shinayoshi.net/post/2016/05/15/apache-setup/</link>
      <pubDate>Sun, 15 May 2016 22:14:46 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/05/15/apache-setup/</guid>
      <description>

&lt;p&gt;ApacheでWebサイトを公開するまでの手順のメモです。&lt;/p&gt;

&lt;h2 id=&#34;apacheとphpのインストール:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;ApacheとPHPのインストール&lt;/h2&gt;

&lt;p&gt;Webサーバ(Apache)とPHPをインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install httpd php php-mbstring
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;apacheの設定:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;Apacheの設定&lt;/h2&gt;

&lt;p&gt;Apacheを設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/httpd/conf/httpd.conf
#ServerName www.example.com:80
↓変更
ServerName www.example.com:80

#
# AllowOverride controls what directives may be placed in .htaccess files.
# It can be &amp;quot;All&amp;quot;, &amp;quot;None&amp;quot;, or any combination of the keywords:
#   Options FileInfo AuthConfig Limit
#
    AllowOverride None
    ↓変更
    AllowOverride All

AddDefaultCharset UTF-8
↓変更
#AddDefaultCharset UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;apacheの起動:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;Apacheの起動&lt;/h2&gt;

&lt;p&gt;Apacheを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl start httpd
$ sudo systemctl enable httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;firewallの設定:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;Firewallの設定&lt;/h2&gt;

&lt;p&gt;FirewallでWeb通信を許可します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --permanent --zone=public --add-service=http
$ sudo firewall-cmd --reload
$ sudo firewall-cmd --list-all-zones
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;動作確認:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;動作確認&lt;/h2&gt;

&lt;p&gt;外部からWebサイトにアクセスできるか確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /var/www/html/index.php
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt;
    &amp;lt;title&amp;gt;net-tools&amp;lt;/title&amp;gt;
    &amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;shinayoshi shinayoshi.net&amp;quot; /&amp;gt;
    &amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;shinayoshi&amp;quot; /&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;?php echo $_SERVER[&amp;quot;REMOTE_ADDR&amp;quot;]; ?&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Webブラウザ等でWebサーバにアクセスできることを確認します。
正常にアクセスできていれば接続元のIPアドレスが表示されているはずです。&lt;/p&gt;

&lt;h2 id=&#34;その他:cb5d764d8c08bb095f7a6ed7bff2ff04&#34;&gt;その他&lt;/h2&gt;

&lt;p&gt;実際にWebサイトを公開するには、DNSの設定や素敵なコンテンツを作成する必要がありますが割愛します。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>お名前.com VPS(KVM)の初期設定(CentOS 7 1511)</title>
      <link>http://www.shinayoshi.net/post/2016/01/16/onamae-vpn-setup/</link>
      <pubDate>Sat, 16 Jan 2016 22:30:25 +0900</pubDate>
      
      <guid>http://www.shinayoshi.net/post/2016/01/16/onamae-vpn-setup/</guid>
      <description>

&lt;p&gt;お名前.comのVPS(KVM)の初期設定メモを残しておく。
「CentOS-7-x86_64-Minimal-1511.iso」を使用して再インストール後からの設定を記載しています。&lt;/p&gt;

&lt;h2 id=&#34;rootでログイン:130a6ce433fd353093f8e4a56dec5622&#34;&gt;rootでログイン&lt;/h2&gt;

&lt;p&gt;お名前.comのコンソール画面でログインを行います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;login: root
Password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログインに成功すると以下のようなプロンプトが表示されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@&amp;lt;ホスト名&amp;gt; ~]#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以降の手順では、rootアカウントのプロンプトを&lt;code&gt;#&lt;/code&gt;で表現します。&lt;/p&gt;

&lt;h2 id=&#34;シリアルコンソール接続の有効化:130a6ce433fd353093f8e4a56dec5622&#34;&gt;シリアルコンソール接続の有効化&lt;/h2&gt;

&lt;p&gt;シリアルコンソールで接続できるように設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/default/grub
GRUB_CMDLINE_LINUX=&amp;quot;rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet&amp;quot;
↓変更
GRUB_CMDLINE_LINUX=&amp;quot;rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet console=tty0 console=ttyS0,115200n8r&amp;quot;
# grub2-mkconfig -o /boot/grub2/grub.cfg
# reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;共用sshサーバ経由のシリアルコンソール接続:130a6ce433fd353093f8e4a56dec5622&#34;&gt;共用SSHサーバ経由のシリアルコンソール接続&lt;/h2&gt;

&lt;p&gt;お名前.comのVPS(KVM)には、VPSにシリアルコンソール接続するための共用SSHサーバが用意されています。以降の設定はこのSSHサーバ経由のシリアルコンソール接続で作業します。&lt;/p&gt;

&lt;p&gt;SSH接続経由のシリアルコンソールの接続方法については、お名前.comのサイトに詳しく書かれているのでそちらをご確認ください。&lt;a href=&#34;http://guide.onamae-server.com/vpskvm/3_14_15_75_2/&#34;&gt;SSH接続経由のシリアルコンソール | SSH接続 | VPS (KVM) 活用ガイド&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ホスト名変更:130a6ce433fd353093f8e4a56dec5622&#34;&gt;ホスト名変更&lt;/h2&gt;

&lt;p&gt;ホスト名の変更を行います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# hostnamectl set-hostname newhost.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ホスト名の変更を反映するために再起動を行います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再度、お名前.comのコンソール画面でログインを行い、ホスト名が変更されていることを確認します。&lt;/p&gt;

&lt;h2 id=&#34;パッケージの更新:130a6ce433fd353093f8e4a56dec5622&#34;&gt;パッケージの更新&lt;/h2&gt;

&lt;p&gt;パッケージを最新の状態に更新します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum -y update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;kernelのバージョンアップがあった場合にはサーバの再起動を実施します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;管理者アカウントの作成:130a6ce433fd353093f8e4a56dec5622&#34;&gt;管理者アカウントの作成&lt;/h2&gt;

&lt;p&gt;通常使用する管理者アカウントを作成します。また、管理者アカウントにパスワードを設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# useradd centos
# passwd centos
Changing password for user centos.
New password: &amp;lt;パスワード入力&amp;gt;
Retype new password: &amp;lt;パスワード再入力&amp;gt;
passwd: all authentication tokens updated successfully.
# gpasswd -a centos wheel
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sudo権限の付与:130a6ce433fd353093f8e4a56dec5622&#34;&gt;sudo権限の付与&lt;/h2&gt;

&lt;p&gt;管理者アカウントにsudo権限を付与します。以下ではcentosにROOT関連のコマンドとSHUTDOWN関連のコマンド以外のすべてのコマンドの実行権限を付与しています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# visudo -f /etc/sudoers.d/wheel
Cmnd_Alias ROOT = /bin/su, /usr/bin/sudo
Cmnd_Alias SHUTDOWN = /sbin/halt, /sbin/shutdown, /sbin/poweroff, /sbin/reboot, /sbin/fastboot, /sbin/init
%wheel  ALL=(ALL)       ALL,!ROOT,!SHUTDOWN
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rootのログアウトと管理者アカウントでログイン:130a6ce433fd353093f8e4a56dec5622&#34;&gt;rootのログアウトと管理者アカウントでログイン&lt;/h2&gt;

&lt;p&gt;管理者アカウントを作成してsudoが使えるようになったので、rootアカウントをログアウトして管理者アカウントでログインし直します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# exit
logout
＜省略＞
login: centos
Password:
[centos@&amp;lt;ホスト名&amp;gt; ~]$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以降の手順では、管理者アカウントのプロンプトを&lt;code&gt;$&lt;/code&gt;で表現します。&lt;/p&gt;

&lt;h2 id=&#34;rootアカウントの無効化:130a6ce433fd353093f8e4a56dec5622&#34;&gt;rootアカウントの無効化&lt;/h2&gt;

&lt;p&gt;すべての作業は管理者アカウントで行うため、rootアカウントを無効化します。※シリアルコンソールからもrootでログインできなくなりますので、設定する際は慎重に行ってください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo passwd -l root
[sudo] password for centos:
Locking password for user root.
passwd: Success
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;root宛てメールの転送:130a6ce433fd353093f8e4a56dec5622&#34;&gt;root宛てメールの転送&lt;/h2&gt;

&lt;p&gt;root宛てに届くメールを管理者アカウントに転送するように設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/aliases
root:           centos
$ sudo newaliases
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;firewalldの設定:130a6ce433fd353093f8e4a56dec5622&#34;&gt;Firewalldの設定&lt;/h2&gt;

&lt;p&gt;Firewalldを使用して不要な通信を拒否するように設定します。&lt;/p&gt;

&lt;h3 id=&#34;firewalldのインストール:130a6ce433fd353093f8e4a56dec5622&#34;&gt;Firewalldのインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum -y install firewalld
$ sudo systemctl start firewalld
$ sudo systemctl enable firewalld
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;firewalldの設定確認:130a6ce433fd353093f8e4a56dec5622&#34;&gt;Firewalldの設定確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --get-active-zones
$ sudo firewall-cmd --list-all-zones
$ sudo firewall-cmd --get-services
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;firewalldの初期設定:130a6ce433fd353093f8e4a56dec5622&#34;&gt;Firewalldの初期設定&lt;/h3&gt;

&lt;p&gt;eth0のゾーンをpublicに変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --zone=public --change-interface=eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;publicゾーンで不要なサービスを無効化します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --permanent --zone=public --remove-service=ssh
$ sudo firewall-cmd --permanent --zone=public --remove-service=dhcpv6-client
$ sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定の確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --zone=public --list-all
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;selinuxの無効化:130a6ce433fd353093f8e4a56dec5622&#34;&gt;SELinuxの無効化&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo setenforce Permissive
$ sudo getenforce
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/selinux/config
SELINUX=enforcing
↓変更
SELINUX=permissive
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ipv6の無効化:130a6ce433fd353093f8e4a56dec5622&#34;&gt;IPv6の無効化&lt;/h2&gt;

&lt;p&gt;IPv6を無効化します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
$ sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
$ sudo sysctl -a | grep disable_ipv6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記のコマンドではシステムを再起動した場合にIPv6が有効になってしまうため、再起動しても無効になるように設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/sysctl.d/10-disableipv6.conf
net.ipv6.conf.all.disable_ipv6=1
net.ipv6.conf.default.disable_ipv6=1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;postfixのipv6無効化:130a6ce433fd353093f8e4a56dec5622&#34;&gt;PostfixのIPv6無効化&lt;/h3&gt;

&lt;p&gt;IPv6の無効化に併せてPostfixもIPv6を無効化します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/postfix/main.cf
#inet_protocols = all
inet_protocols = ipv4
$ sudo systemctl restart postfix
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ntpの時刻同期:130a6ce433fd353093f8e4a56dec5622&#34;&gt;NTPの時刻同期&lt;/h2&gt;

&lt;p&gt;chronyにより時刻同期を行うように設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum -y install chrony
$ sudo vi /etc/chrony.conf
#server 0.centos.pool.ntp.org iburst
#server 1.centos.pool.ntp.org iburst
#server 2.centos.pool.ntp.org iburst
#server 3.centos.pool.ntp.org iburst
server ntp.nict.jp iburst
server ntp.jst.mfeed.ad.jp iburst
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chronydを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl start chronyd
$ sudo systemctl enable chronyd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;時刻の同期状況を確認するには以下のコマンドを実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chronyc sources
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;不要サービスの停止:130a6ce433fd353093f8e4a56dec5622&#34;&gt;不要サービスの停止&lt;/h2&gt;

&lt;p&gt;セキュリティのため、サーバのリソースのために不要サービスを停止します。お名前.comのVPS(KVM)には共用SSH経由のシリアルコンソールでログインするため、SSHを停止しています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl list-units --type=service
$ sudo systemctl stop sshd
$ sudo systemctl disable sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logwatchのインストール:130a6ce433fd353093f8e4a56dec5622&#34;&gt;logwatchのインストール&lt;/h2&gt;

&lt;p&gt;logwatchをインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum -y install logwatch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;logwatchの実行結果を確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo logwatch --output stdout
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上、初期設定は終了となります。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>