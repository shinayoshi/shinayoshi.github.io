<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>homepot1 on shinayoshi&#39;s note</title>
    <link>https://www.shinayoshi.net/tags/homepot1/</link>
    <description>Recent content in homepot1 on shinayoshi&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright (c) 2019 shinayoshi</copyright>
    <lastBuildDate>Mon, 09 Jan 2017 17:30:57 +0900</lastBuildDate><atom:link href="https://www.shinayoshi.net/tags/homepot1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi 2でCactiを導入する(サーバの登録)</title>
      <link>https://www.shinayoshi.net/post/2017/01/09/setting-snmpd/</link>
      <pubDate>Mon, 09 Jan 2017 17:30:57 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/09/setting-snmpd/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回はCactiを導入しました。 今回はCactiにhomenas1、homemon1、homemon2、homepxy1、homepot1を登録していきます。SNMPv3を使用してSNMPの値を取得します。
snmpdのインストール 追加するデバイス(Server)にsnmpdをインストールする。
$ sudo -E apt-get install snmpd snmp パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libperl5.20 libsensors4 libsnmp-base libsnmp30 提案パッケージ: lm-sensors snmp-mibs-downloader snmptrapd 以下のパッケージが新たにインストールされます: libperl5.20 libsensors4 libsnmp-base libsnmp30 snmp snmpd アップグレード: 0 個、新規インストール: 6 個、削除: 0 個、保留: 1 個。 3,836 kB のアーカイブを取得する必要があります。 この操作後に追加で 7,088 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main libperl5.20 armhf 5.20.2-3+deb8u6 [1,354 B] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main libsensors4 armhf 1:3.3.5-2 [48.9 kB] 取得:3 http://mirrordirector.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でZabbixサーバを構築する(Agent導入)</title>
      <link>https://www.shinayoshi.net/post/2017/01/09/setting-zabbix-agent/</link>
      <pubDate>Mon, 09 Jan 2017 12:04:12 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/09/setting-zabbix-agent/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回はZabbix Serverを導入しました。 今回はhomenas1、homemon1、homemon2、homepxy1、homepot1にZabbix Agentを導入していきます。
Zabbix Agentのインストール Zabbix Agentをインストールします。
$ sudo -E apt-get install zabbix-agent パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libcurl3-gnutls libpci3 pciutils 以下のパッケージが新たにインストールされます: libcurl3-gnutls libpci3 pciutils zabbix-agent アップグレード: 0 個、新規インストール: 4 個、削除: 0 個、保留: 1 個。 819 kB のアーカイブを取得する必要があります。 この操作後に追加で 2,344 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main libpci3 armhf 1:3.2.1-3 [48.2 kB] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main libcurl3-gnutls armhf 7.38.0-4+deb8u5 [225 kB] 取得:3 http://mirrordirector.raspbian.org/raspbian/ jessie/main pciutils armhf 1:3.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2のセキュリティ設定を強化する</title>
      <link>https://www.shinayoshi.net/post/2017/01/07/setting-cowrie-security/</link>
      <pubDate>Sat, 07 Jan 2017 01:02:37 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/07/setting-cowrie-security/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomepot1を構築していきます。 Cowrieを使用するにあたりやっておきたいセキュリティ設定を行っていきます。
IPv6の無効化 IPv6は使用しないため、IPv6を無効化します。
$ sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.all.disable_ipv6 = 1 $ $ sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6 = 1 $ $ sudo sysctl -a | grep disable_ipv6 sysctl: reading key &amp;quot;net.ipv6.conf.all.stable_secret&amp;quot; net.ipv6.conf.all.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.default.stable_secret&amp;quot; net.ipv6.conf.default.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.eth0.stable_secret&amp;quot; net.ipv6.conf.eth0.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.eth1.stable_secret&amp;quot; net.ipv6.conf.eth1.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.lo.stable_secret&amp;quot; net.ipv6.conf.lo.disable_ipv6 = 1 $ 再起動後もIPv6が無効化するように設定します。</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でHoney Pot(Cowrie)を視覚化する</title>
      <link>https://www.shinayoshi.net/post/2017/01/05/setting-kippo-graph/</link>
      <pubDate>Thu, 05 Jan 2017 03:34:58 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/05/setting-kippo-graph/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomepot1を構築していきます。
Kippo-GraphによるSSHハニーポット(Cowrie)の可視化 MySQLのインストールと初期化 MySQLをインストールします。 インストール途中でMySQLのrootアカウントのパスワードを求められるので、適宜設定します。
$ sudo -E apt-get install mysql-server パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18 libterm-readkey-perl mysql-client-5.5 mysql-common mysql-server-5.5 mysql-server-core-5.5 提案パッケージ: libclone-perl libmldbm-perl libnet-daemon-perl libsql-statement-perl libipc-sharedcache-perl mailx tinyca 以下のパッケージが新たにインストールされます: libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18 libterm-readkey-perl mysql-client-5.5 mysql-common mysql-server mysql-server-5.5 mysql-server-core-5.5 アップグレード: 0 個、新規インストール: 11 個、削除: 0 個、保留: 0 個。 8,275 kB のアーカイブを取得する必要があります。 この操作後に追加で 89.3 MB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でHoney Pot(Cowrie)を構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/04/setting-cowrie/</link>
      <pubDate>Wed, 04 Jan 2017 17:53:55 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/04/setting-cowrie/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomepot1を構築していきます。
Raspberry Pi 2でSSHハニーポット(Cowrie)構築 インターネットの怖さを知るためにSSHハニーポットを構築します。
公開鍵認証方式の設定 公開鍵・秘密鍵の作成
$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/pi/.ssh/id_rsa): Created directory &#39;/home/pi/.ssh&#39;. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/pi/.ssh/id_rsa. Your public key has been saved in /home/pi/.ssh/id_rsa.pub. The key fingerprint is: XX:XX:XX:39:e2:be:63:99:e1:a2:a5:32:f4:XX:XX:XX pi@homepot1 The key&#39;s randomart image is: +---[RSA 2048]----+ | | | | | | | | | .</description>
    </item>
    
  </channel>
</rss>
