<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>home-network on shinayoshi&#39;s note</title>
    <link>https://www.shinayoshi.net/tags/home-network/</link>
    <description>Recent content in home-network on shinayoshi&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright (c) 2019 shinayoshi</copyright>
    <lastBuildDate>Sun, 15 Jan 2017 00:51:03 +0900</lastBuildDate><atom:link href="https://www.shinayoshi.net/tags/home-network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi 2のイメージバックアップを行う</title>
      <link>https://www.shinayoshi.net/post/2017/01/15/backup-raspberrypi/</link>
      <pubDate>Sun, 15 Jan 2017 00:51:03 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/15/backup-raspberrypi/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomenas1のバックアップを行います。
gitのインストール $ sudo -E apt-get install git パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: git-man liberror-perl 提案パッケージ: gettext-base git-daemon-run git-daemon-sysvinit git-doc git-el git-email git-gui gitk gitweb git-arch git-cvs git-mediawiki git-svn 以下のパッケージが新たにインストールされます: git git-man liberror-perl アップグレード: 0 個、新規インストール: 3 個、削除: 0 個、保留: 1 個。 4,015 kB のアーカイブを取得する必要があります。 この操作後に追加で 20.4 MB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main liberror-perl all 0.17-1.1 [22.4 kB] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main git-man all 1:2.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でファイルバックアップを行う</title>
      <link>https://www.shinayoshi.net/post/2017/01/12/setting-rsnapshot/</link>
      <pubDate>Thu, 12 Jan 2017 17:52:47 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/12/setting-rsnapshot/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomenas1にrsnapshotを導入してファイルバックアップを行う設定を行います。
なおバックアップ元は/mnt/nas/、バックアップ先は/mnt/backup/を想定しています。
$ df -h /dev/sdc1 917G 72M 871G 1% /mnt/backup /dev/md0 394G 71M 374G 1% /mnt/nas $ rsnapshotのインストール $ sudo -E apt-get install rsnapshot パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: liblchown-perl rsync 以下のパッケージが新たにインストールされます: liblchown-perl rsnapshot rsync アップグレード: 0 個、新規インストール: 3 個、削除: 0 個、保留: 1 個。 507 kB のアーカイブを取得する必要があります。 この操作後に追加で 1,133 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main liblchown-perl armhf 1.01-2+b1 [8,828 B] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main rsync armhf 3.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でCactiを導入する(サーバの登録)</title>
      <link>https://www.shinayoshi.net/post/2017/01/09/setting-snmpd/</link>
      <pubDate>Mon, 09 Jan 2017 17:30:57 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/09/setting-snmpd/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回はCactiを導入しました。 今回はCactiにhomenas1、homemon1、homemon2、homepxy1、homepot1を登録していきます。SNMPv3を使用してSNMPの値を取得します。
snmpdのインストール 追加するデバイス(Server)にsnmpdをインストールする。
$ sudo -E apt-get install snmpd snmp パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libperl5.20 libsensors4 libsnmp-base libsnmp30 提案パッケージ: lm-sensors snmp-mibs-downloader snmptrapd 以下のパッケージが新たにインストールされます: libperl5.20 libsensors4 libsnmp-base libsnmp30 snmp snmpd アップグレード: 0 個、新規インストール: 6 個、削除: 0 個、保留: 1 個。 3,836 kB のアーカイブを取得する必要があります。 この操作後に追加で 7,088 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main libperl5.20 armhf 5.20.2-3+deb8u6 [1,354 B] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main libsensors4 armhf 1:3.3.5-2 [48.9 kB] 取得:3 http://mirrordirector.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でCactiを導入する</title>
      <link>https://www.shinayoshi.net/post/2017/01/09/setting-cacti/</link>
      <pubDate>Mon, 09 Jan 2017 14:45:15 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/09/setting-cacti/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomemon1、homemon2にCactiを導入します。
Cactiのインストール Cactiをインストールします。 途中でApache2の設定やMySQLのパスワードについて聞かれるので適宜回答します。
$ sudo -E apt-get install cacti cacti-spine パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: dbconfig-common fontconfig javascript-common libcairo2 libdatrie1 libdbi1 libgraphite2-3 libharfbuzz0b libjs-jquery libjs-jquery-cookie libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libphp-adodb libpixman-1-0 librrd4 libthai-data libthai0 libxcb-render0 libxcb-shm0 libxrender1 php5-snmp rrdtool snmp 提案パッケージ: moreutils snmp-mibs-downloader php5-adodb librrds-perl 以下のパッケージが新たにインストールされます: cacti cacti-spine dbconfig-common fontconfig javascript-common libcairo2 libdatrie1 libdbi1 libgraphite2-3 libharfbuzz0b libjs-jquery libjs-jquery-cookie libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libphp-adodb libpixman-1-0 librrd4 libthai-data libthai0 libxcb-render0 libxcb-shm0 libxrender1 php5-snmp rrdtool snmp アップグレード: 0 個、新規インストール: 26 個、削除: 0 個、保留: 1 個。 6,777 kB のアーカイブを取得する必要があります。 この操作後に追加で 16.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でZabbixサーバを構築する(Agent導入)</title>
      <link>https://www.shinayoshi.net/post/2017/01/09/setting-zabbix-agent/</link>
      <pubDate>Mon, 09 Jan 2017 12:04:12 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/09/setting-zabbix-agent/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回はZabbix Serverを導入しました。 今回はhomenas1、homemon1、homemon2、homepxy1、homepot1にZabbix Agentを導入していきます。
Zabbix Agentのインストール Zabbix Agentをインストールします。
$ sudo -E apt-get install zabbix-agent パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libcurl3-gnutls libpci3 pciutils 以下のパッケージが新たにインストールされます: libcurl3-gnutls libpci3 pciutils zabbix-agent アップグレード: 0 個、新規インストール: 4 個、削除: 0 個、保留: 1 個。 819 kB のアーカイブを取得する必要があります。 この操作後に追加で 2,344 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main libpci3 armhf 1:3.2.1-3 [48.2 kB] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main libcurl3-gnutls armhf 7.38.0-4+deb8u5 [225 kB] 取得:3 http://mirrordirector.raspbian.org/raspbian/ jessie/main pciutils armhf 1:3.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でZabbixサーバを構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/08/setting-zabbix-server/</link>
      <pubDate>Sun, 08 Jan 2017 20:40:44 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/08/setting-zabbix-server/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomemon1、homemon2を構築していきます。 本環境の監視を行うためにZabbixを導入します。
Zabbix Serverのインストール $ sudo -E apt-get install zabbix-server-mysql zabbix-frontend-php php5-mysql task-japanese パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: apache2 apache2-bin apache2-data apache2-utils bdf2psf fbterm fontconfig-config fonts-dejavu-core fping libaio1 libapache2-mod-php5 libapr1 libaprutil1 libaprutil1-dbd-sqlite3 libaprutil1-ldap libcurl3-gnutls libdbd-mysql-perl libdbi-perl libfontconfig1 libfontenc1 libgd3 libhtml-template-perl libiksemel3 libjbig0 libltdl7 liblua5.1-0 libmysqlclient18 libodbc1 libonig2 libopenipmi0 libpci3 libperl4-corelibs-perl libperl5.20 libqdbm14 libsensors4 libsnmp-base libsnmp30 libterm-readkey-perl libtiff5 libvpx1 libxfont1 libxpm4 lsof lv manpages-ja manpages-ja-dev mysql-client-5.5 mysql-common mysql-server mysql-server-5.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でSyslogサーバを構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/07/setting-rsyslog/</link>
      <pubDate>Sat, 07 Jan 2017 16:09:11 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/07/setting-rsyslog/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomemon1、homemon2を構築していきます。 FortiGate 60Dの通過ログやセキュリティイベントログを記録するためにSyslogサーバを構築します。
rsyslogの設定 ネットワーク機器のSyslogを保存する用の設定
ネットワーク機器のIPアドレスまたはホスト名でディレクトリを作成し、IPアドレスまたはホスト名でログファイルを作成する。 例）/var/log/network-device/ホスト名/ホスト名.log
$ sudo cp -p /etc/rsyslog.conf{,.org} $ ls -l /etc/rsyslog.conf* -rw-r--r-- 1 root root 2632 12月 14 2015 /etc/rsyslog.conf -rw-r--r-- 1 root root 2632 12月 14 2015 /etc/rsyslog.conf.org $ $ sudo vi /etc/rsyslog.conf #$ModLoad imudp #$UDPServerRun 514 $ModLoad imudp $UDPServerRun 514 $WorkDirectory /var/spool/rsyslog # # Queue # $MainMsgQueueType LinkedList #$ActionQueueType Direct $ diff /etc/rsyslog.conf.org /etc/rsyslog.conf 16,17c16,17 &amp;lt; #$ModLoad imudp &amp;lt; #$UDPServerRun 514 --- &amp;gt; $ModLoad imudp &amp;gt; $UDPServerRun 514 46a47,52 &amp;gt; &amp;gt; # &amp;gt; # Queue &amp;gt; # &amp;gt; $MainMsgQueueType LinkedList &amp;gt; #$ActionQueueType Direct $ $ sudo vi /etc/rsyslog.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でNTPサーバを構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/07/setting-ntp-server/</link>
      <pubDate>Sat, 07 Jan 2017 13:05:24 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/07/setting-ntp-server/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomemon1、homemon2を構築していきます。 まずは本環境内の機器から時刻同期を行えるようにNTPサーバを構築します。
NTPサーバの構築 $ sudo cp -p /etc/ntp.conf{,.backup20170107} $ ls -l /etc/ntp.conf* -rw-r--r-- 1 root root 2052 9月 23 13:25 /etc/ntp.conf -rw-r--r-- 1 root root 2052 9月 23 13:25 /etc/ntp.conf.backup20170107 -rw-r--r-- 1 root root 1988 7月 26 07:36 /etc/ntp.conf.org $ $ sudo vi /etc/ntp.conf # Clients from this (example!) subnet have unlimited access, but only if # cryptographically authenticated. #restrict 192.168.123.0 mask 255.255.255.0 notrust restrict 192.168.10.0 mask 255.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2のセキュリティ設定を強化する</title>
      <link>https://www.shinayoshi.net/post/2017/01/07/setting-cowrie-security/</link>
      <pubDate>Sat, 07 Jan 2017 01:02:37 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/07/setting-cowrie-security/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomepot1を構築していきます。 Cowrieを使用するにあたりやっておきたいセキュリティ設定を行っていきます。
IPv6の無効化 IPv6は使用しないため、IPv6を無効化します。
$ sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.all.disable_ipv6 = 1 $ $ sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6 = 1 $ $ sudo sysctl -a | grep disable_ipv6 sysctl: reading key &amp;quot;net.ipv6.conf.all.stable_secret&amp;quot; net.ipv6.conf.all.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.default.stable_secret&amp;quot; net.ipv6.conf.default.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.eth0.stable_secret&amp;quot; net.ipv6.conf.eth0.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.eth1.stable_secret&amp;quot; net.ipv6.conf.eth1.disable_ipv6 = 1 sysctl: reading key &amp;quot;net.ipv6.conf.lo.stable_secret&amp;quot; net.ipv6.conf.lo.disable_ipv6 = 1 $ 再起動後もIPv6が無効化するように設定します。</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でHoney Pot(Cowrie)を視覚化する</title>
      <link>https://www.shinayoshi.net/post/2017/01/05/setting-kippo-graph/</link>
      <pubDate>Thu, 05 Jan 2017 03:34:58 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/05/setting-kippo-graph/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomepot1を構築していきます。
Kippo-GraphによるSSHハニーポット(Cowrie)の可視化 MySQLのインストールと初期化 MySQLをインストールします。 インストール途中でMySQLのrootアカウントのパスワードを求められるので、適宜設定します。
$ sudo -E apt-get install mysql-server パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18 libterm-readkey-perl mysql-client-5.5 mysql-common mysql-server-5.5 mysql-server-core-5.5 提案パッケージ: libclone-perl libmldbm-perl libnet-daemon-perl libsql-statement-perl libipc-sharedcache-perl mailx tinyca 以下のパッケージが新たにインストールされます: libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmysqlclient18 libterm-readkey-perl mysql-client-5.5 mysql-common mysql-server mysql-server-5.5 mysql-server-core-5.5 アップグレード: 0 個、新規インストール: 11 個、削除: 0 個、保留: 0 個。 8,275 kB のアーカイブを取得する必要があります。 この操作後に追加で 89.3 MB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でHoney Pot(Cowrie)を構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/04/setting-cowrie/</link>
      <pubDate>Wed, 04 Jan 2017 17:53:55 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/04/setting-cowrie/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomepot1を構築していきます。
Raspberry Pi 2でSSHハニーポット(Cowrie)構築 インターネットの怖さを知るためにSSHハニーポットを構築します。
公開鍵認証方式の設定 公開鍵・秘密鍵の作成
$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/pi/.ssh/id_rsa): Created directory &#39;/home/pi/.ssh&#39;. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/pi/.ssh/id_rsa. Your public key has been saved in /home/pi/.ssh/id_rsa.pub. The key fingerprint is: XX:XX:XX:39:e2:be:63:99:e1:a2:a5:32:f4:XX:XX:XX pi@homepot1 The key&#39;s randomart image is: +---[RSA 2048]----+ | | | | | | | | | .</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でSquidサーバを構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/03/setting-proxy/</link>
      <pubDate>Tue, 03 Jan 2017 23:25:23 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/03/setting-proxy/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomepxy1を構築していきます。
Raspberry Pi 2でプロキシサーバ構築 家庭内インターネット接続環境からインターネットに接続するためにキャッシュDNSサーバとプロキシサーバを構築します。 今回はプロキシサーバを構築していきます。
Squidの設定 squidのインストール
$ sudo apt-get install squid パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: squid-common squid-langpack 提案パッケージ: squidclient squid-cgi logcheck-database smbclient winbind 以下のパッケージが新たにインストールされます: squid squid-common squid-langpack アップグレード: 0 個、新規インストール: 3 個、削除: 0 個、保留: 1 個。 1,106 kB のアーカイブを取得する必要があります。 この操作後に追加で 3,882 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main squid-langpack all 20140506-1 [150 kB] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main squid-common all 2.7.STABLE9-4.1 [352 kB] 取得:3 http://mirrordirector.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でCache DNSを構築する</title>
      <link>https://www.shinayoshi.net/post/2017/01/03/setting-cache-dns/</link>
      <pubDate>Tue, 03 Jan 2017 22:22:47 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/03/setting-cache-dns/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomepxy1を構築していきます。
Raspberry Pi 2でキャッシュDNSサーバ構築 家庭内インターネット接続環境からインターネットに接続するためにキャッシュDNSサーバとプロキシサーバを構築します。 まずはキャッシュDNSサーバを構築していきます。
bind9の設定 bind9のインストール
$ sudo apt-get install bind9 dnsutils パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: bind9utils 提案パッケージ: bind9-doc ufw rblcheck 以下のパッケージが新たにインストールされます: bind9 bind9utils dnsutils アップグレード: 0 個、新規インストール: 3 個、削除: 0 個、保留: 1 個。 562 kB のアーカイブを取得する必要があります。 この操作後に追加で 1,620 kB のディスク容量が消費されます。 続行しますか? [Y/n] y 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main dnsutils armhf 1:9.9.5.dfsg-9+deb8u8 [113 kB] 取得:2 http://mirrordirector.raspbian.org/raspbian/ jessie/main bind9utils armhf 1:9.9.5.dfsg-9+deb8u8 [157 kB] 取得:3 http://mirrordirector.raspbian.org/raspbian/ jessie/main bind9 armhf 1:9.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でファイルサーバを構築する(NFS/Samba)</title>
      <link>https://www.shinayoshi.net/post/2017/01/02/setting-fileserver/</link>
      <pubDate>Mon, 02 Jan 2017 20:30:05 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/02/setting-fileserver/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
前回に引き続きhomenas1を構築していきます。
Raspberry Pi 2でファイルサーバ構築(NFS/Samba) 前回はUSB Storageを使用してRAIDデバイスを設定しました。 今回はNFSやSambaの設定を行っていきます。
NFSの設定 NFSのインストール
$ sudo apt-get install nfs-kernel-server パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下のパッケージが新たにインストールされます: nfs-kernel-server アップグレード: 0 個、新規インストール: 1 個、削除: 0 個、保留: 1 個。 101 kB のアーカイブを取得する必要があります。 この操作後に追加で 373 kB のディスク容量が消費されます。 取得:1 http://mirrordirector.raspbian.org/raspbian/ jessie/main nfs-kernel-server armhf 1:1.2.8-9 [101 kB] 101 kB を 1秒 で取得しました (66.7 kB/s) 以前に未選択のパッケージ nfs-kernel-server を選択しています。 (データベースを読み込んでいます ... 現在 31534 個のファイルとディレクトリがインストールされています。) .../nfs-kernel-server_1%3a1.2.8-9_armhf.deb を展開する準備をしています ... nfs-kernel-server (1:1.2.8-9) を展開しています... systemd (215-17+deb8u5) のトリガを処理しています .</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2でファイルサーバを構築する(mdadm)</title>
      <link>https://www.shinayoshi.net/post/2017/01/01/setting-usb-storage/</link>
      <pubDate>Sun, 01 Jan 2017 18:28:38 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2017/01/01/setting-usb-storage/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
今回はhomenas1を構築していきます。
Raspberry Pi 2でファイルサーバ構築(mdadm) 家庭内インターネット接続環境で使用するファイルサーバを構築します。 ファイルサーバの利用目的は以下の3つです。
 LAN内のファイル共有 Raspberry Piバックアップ Syslog等のログ保管  今回はUSB Storageを使用する準備までを行います。 次回はNFSやSambaの設定を行っていきます。
用意したもの    品名 台数     Raspberry Pi 2 1台   USB Storage 1TB 3台   USB Hub 1台    物理構成 物理構成は以下のような構成を想定しています。
設定 mdadmのインストール $ sudo apt-get update $ sudo apt-get upgrade $ sudo apt-get install mdadm パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 以下の追加パッケージがインストールされます: bsd-mailx exim4-base exim4-config exim4-daemon-light liblockfile-bin liblockfile1 提案パッケージ: mail-reader eximon4 exim4-doc-html exim4-doc-info spf-tools-perl swaks 推奨パッケージ: mailx default-mta mail-transport-agent 以下のパッケージが新たにインストールされます: bsd-mailx exim4-base exim4-config exim4-daemon-light liblockfile-bin liblockfile1 mdadm アップグレード: 0 個、新規インストール: 7 個、削除: 0 個、保留: 1 個。 2,630 kB のアーカイブを取得する必要があります。 この操作後に追加で 4,960 kB のディスク容量が消費されます。 続行しますか?</description>
    </item>
    
    <item>
      <title>Raspberry Pi 2の初期設定</title>
      <link>https://www.shinayoshi.net/post/2016/10/22/raspberrypi-initial-setup/</link>
      <pubDate>Sat, 22 Oct 2016 22:43:46 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2016/10/22/raspberrypi-initial-setup/</guid>
      <description>Raspberry Pi 2共通初期設定 家庭内インターネット接続環境で使用するRaspberry Pi 2の初期設定を行います。
前提 Raspberry Pi 2にRaspbian Jessie(2016-09-23-raspbian-jessie-lite.img)をインストールした環境の初期設定を想定します。 セキュリティ関連の設定は個別に行いますので、ここでは省略します。
パッケージ更新 $ sudo apt-get update $ sudo apt-get upgrade  Updating and Upgrading Raspbian - Raspberry Pi Documentation  IPアドレス固定化 Raspberry Pi 2のIPアドレスを固定する。
$ sudo cp -p /etc/dhcpcd.conf /etc/dhcpcd.conf.org $ sudo vi /etc/dhcpcd.conf #Add the following line interface eth0 static ip_address=192.168.40.10/24 static routers=192.168.40.254 static domain_name_servers=192.168.100.1 #static domain_name= #static domain_search= interface eth1 static ip_address=172.31.10.110/24 static routers= static domain_name_servers= #static domain_name= #static domain_search=  &amp;ldquo;man dhcpcd.</description>
    </item>
    
    <item>
      <title>家庭内インターネット接続環境を構築する</title>
      <link>https://www.shinayoshi.net/post/2016/10/22/build-home-network-01/</link>
      <pubDate>Sat, 22 Oct 2016 19:59:16 +0900</pubDate>
      
      <guid>https://www.shinayoshi.net/post/2016/10/22/build-home-network-01/</guid>
      <description>FortiGate 60DとRaspberry Piを使用して家庭内インターネット接続環境を構築します。 最終的には以下のような構成を想定しています。
機材 本環境を構築するために以下の機材を用意しました。
 FortiGate 60D : 1台 Raspberry Pi 2 : 5台 USB LANアダプタ : 5個 Switching HUB : 3台 WANルータ : 1台  具体的な構築内容は次回から記載します。</description>
    </item>
    
  </channel>
</rss>
